util.require_natives("natives-1681379138", "g-uno")
local function player_toggle_loop(root, pid, menu_name, command_names, help_text, callback, callback_off)
    return menu.toggle_loop(root, menu_name, command_names, help_text, function()
        if not players.exists(pid) then 
            util.stop_thread()
        end
        callback()
    end, callback_off)
end

local spawned_objects = {}

local function BitTest(bits, place)
    return (bits & (1 << place)) != 0
end

local function IS_PLAYER_USING_ORBITAL_CANNON(player)
    return BitTest(memory.read_int(memory.script_global((2657589 + (player * 466 + 1) + 427))), 0) -- Global_2657589[PLAYER::PLAYER_ID() /*466*/].f_427), 0)
end

local function IS_PLAYER_FLYING_ANY_DRONE(player)
   return BitTest(memory.read_int(memory.script_global(1853910 + (player * 862 + 1) + 267 + 365)), 26) -- Global_1853910[PLAYER::PLAYER_ID() /*862*/].f_267.f_365, 26)
end

local function IS_PLAYER_USING_GUIDED_MISSILE(player)
    return (memory.read_int(memory.script_global(2657589 + 1 + (player * 466) + 321 + 10)) != -1 and IS_PLAYER_FLYING_ANY_DRONE(player)) -- Global_2657589[PLAYER::PLAYER_ID() /*466*/].f_321.f_10 
end

local function IS_PLAYER_USING_MISSILE_TURRET(player)
    return BitTest(memory.read_int(memory.script_global(1853910 + 1 + (players.user() * 862) + 267 + 365)), 25) -- Global_1853910[PLAYER::PLAYER_ID() /*862*/].f_267.f_365), 25)
end

local function IN_PLAYER_IN_RC_BANDITO(player)
    return BitTest(memory.read_int(memory.script_global(1853910 + (player * 834 + 1) + 267 + 348)), 29)  -- Global_1853910[PLAYER::PLAYER_ID() /*834*/].f_267.f_348, 29)
end

local function IN_PLAYER_IN_RC_TANK(player)
    return BitTest(memory.read_int(memory.script_global(1853910 + (player * 834 + 1) + 267 + 428 + 2)), 16) -- Global_1853910[PLAYER::PLAYER_ID() /*862*/].f_267.f_428.f_2
end

local function IS_PLAYER_IN_KOSATKA(player)
    return BitTest(memory.read_int(memory.script_global(1853910 + (player * 862 + 1 ) + 267 + 479)), 2) -- Global_1853910[PLAYER::PLAYER_ID() /*862*/].f_267.f_479, 2)
end

local function IS_PLAYER_RIDING_ROLLER_COASTER(player)
    return BitTest(memory.read_int(memory.script_global(1853910 + 1 + (player * 862) + 861)), 15) -- Global_1853910[PLAYER::PLAYER_ID() /*862*/].f_861, 15)
end

local function GET_SPAWN_STATE(pid)
    return memory.read_int(memory.script_global(((2657589 + 1) + (pid * 466)) + 232)) -- Global_2657589[PLAYER::PLAYER_ID() /*466*/].f_232
end

local function GET_INTERIOR_FROM_PLAYER(pid)
    return memory.read_int(memory.script_global(((2657589 + 1) + (pid * 466)) + 245)) -- Global_2657589[bVar0 /*466*/].f_245)
end

local function GET_SEAT_PED_IS_IN(ped) -- thanks rockstar for making me do this cus you guys are too lazy to have a native for it :D
    local vehicle = GET_VEHICLE_PED_IS_USING(ped)
    if vehicle == 0 then
        return nil
    end
    local num_of_seats = GET_VEHICLE_MODEL_NUMBER_OF_SEATS(GET_ENTITY_MODEL(vehicle))
    for i = -1, num_of_seats - 1 do
        local ped_in_seat = GET_PED_IN_VEHICLE_SEAT(vehicle, i)
        if ped_in_seat == ped then
            return i
        end
    end
end

local function SetBit(addr: number, bit: number)
	memory.write_int(addr, memory.read_int(addr) | 1 << bit)
end
local function ClearBit(addr: number, bit: number)
	memory.write_int(addr, memory.read_int(addr) ~ 1 << bit)
end

local function StandUser(pid) -- credit to sapphire for this
    if players.exists(pid) and pid != players.user() then
        for menu.player_root(pid):getChildren() as cmd do
            if cmd:getType() == COMMAND_LIST_CUSTOM_SPECIAL_MEANING and cmd:refByRelPath("Stand User"):isValid() then
                return true
            end
        end
    end
    return false
end

local function IsDetectionPresent(pid, detection)
    if players.exists(pid) then
        for menu.player_root(pid):getChildren() as cmd do
            if cmd:getType() == COMMAND_LIST_CUSTOM_SPECIAL_MEANING and cmd:refByRelPath(detection):isValid() then
                return true
            end
        end
    end
    return false
end

local function LegitPlatePattern(plate)
    if string.match(plate, "%d%d%a%a%a%d%d%d") then
      return true
    else
      return false
    end
end

local function LoadWeaponAsset(weapon_name)
    local projectile = util.joaat(weapon_name)
    while not HAS_WEAPON_ASSET_LOADED(projectile) do
        REQUEST_WEAPON_ASSET(projectile, 31, false)
        util.yield(10)
    end
    return projectile
end

local function RequestModel(hash, timeout)
    timeout = timeout or 3
    REQUEST_MODEL(hash)
    local end_time = os.time() + timeout
    repeat
        util.yield()
    until HAS_MODEL_LOADED(hash) or os.time() >= end_time
    return HAS_MODEL_LOADED(hash)
end

local function RequestAnimation(hash)
    REQUEST_ANIM_DICT(hash)
    while not HAS_ANIM_DICT_LOADED(hash) do
        util.yield()
    end
end

function GetControlOfEntity(vehicle)
    local ctr = 0
    while not NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) do
        if ctr >= 250 then
            util.toast("Failed to get control of players vehicle. :/")
            ctr = 0
            return
        end
        NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
        util.yield()
        ctr += 1
    end
end

local attack_weapons = {
    584646201,
    961495388,
    317205821,
    324215364,
    911657153,
    1119849093,
    1834241177,
    2138347493,
    1672152130,
    -608341376,
    -86904375,
    -1075685676,
    -1466123874,
    -1355376991,
    -1312131151,
    -581044007,
    -538741184,
    -102973651,
}

local All_business_properties = {
    -- Clubhouses
    "1334 Roy Lowenstein Blvd",
    "7 Del Perro Beach",
    "75 Elgin Avenue",
    "101 Route 68",
    "1 Paleto Blvd",
    "47 Algonquin Blvd",
    "137 Capital Blvd",
    "2214 Clinton Avenue",
    "1778 Hawick Avenue",
    "2111 East Joshua Road",
    "68 Paleto Blvd",
    "4 Goma Street",
    -- Facilities
    "Grand Senora Desert",
    "Route 68",
    "Sandy Shores",
    "Mount Gordo",
    "Paleto Bay",
    "Lago Zancudo",
    "Zancudo River",
    "Ron Alternates Wind Farm",
    "Land Act Reservoir",
    -- Arcades
    "Pixel Pete's - Paleto Bay",
    "Wonderama - Grapeseed",
    "Warehouse - Davis",
    "Eight-Bit - Vinewood",
    "Insert Coin - Rockford Hills",
    "Videogeddon - La Mesa",
}

local small_warehouses = {
    [1] = "Pacific Bait Storage", 
    [2] = "White Widow Garage", 
    [3] = "Celltowa Unit", 
    [4] = "Convenience Store Lockup", 
    [5] = "Foreclosed Garage", 
    [9] = "Pier 400 Utility Building", 
}

local medium_warehouses = {
    [7] = "Derriere Lingerie Backlot", 
    [10] = "GEE Warehouse", 
    [11] = "LS Marine Building 3", 
    [12] = "Railyard Warehouse", 
    [13] = "Fridgit Annexe",
    [14] = "Disused Factory Outlet", 
    [15] = "Discount Retail Unit", 
    [21] = "Old Power Station", 
}

local large_warehouses = {
    [6] = "Xero Gas Factory",  
    [8] = "Bilgeco Warehouse", 
    [16] = "Logistics Depot", 
    [17] = "Darnell Bros Warehouse", 
    [18] = "Wholesale Furniture", 
    [19] = "Cypress Warehouses", 
    [20] = "West Vinewood Backlot", 
    [22] = "Walker & Sons Warehouse"
}

local weapon_stuff = {
    {"Firework", "weapon_firework"}, 
    {"Up N Atomizer", "weapon_raypistol"},
    {"Unholy Hellbringer", "weapon_raycarbine"},
    {"Rail Gun", "weapon_railgun"},
    {"Red Laser", "vehicle_weapon_enemy_laser"},
    {"Green Laser", "vehicle_weapon_player_laser"},
    {"P-996 Lazer", "vehicle_weapon_player_lazer"},
    {"RPG", "weapon_rpg"},
    {"Homing Launcher", "weapon_hominglauncher"},
    {"EMP Launcher", "weapon_emplauncher"},
    {"Flare Gun", "weapon_flaregun"},
    {"Shotgun", "weapon_bullpupshotgun"},
    {"Stungun", "weapon_stungun"},
    {"Smoke Gun", "weapon_smokegrenade"},
}

local proofs = {
    bullet = {name="Bullets",on=false},
    fire = {name="Fire",on=false},
    explosion = {name="Explosions",on=false},
    collision = {name="Collision",on=false},
    melee = {name="Melee",on=false},
    steam = {name="Steam",on=false},
    drown = {name="Drowning",on=false},
}

local modded_weapons = {
    "weapon_railgun",
    "weapon_stungun",
    "weapon_digiscanner",
}

local veh_things = {
    "brickade2",
    "hauler",
    "hauler2",
    "manchez3",
    "terbyte",
    "minitank",
    "rcbandito",
    "phantom3"
}

local doors = {
    "v_ilev_ml_door1",
    "v_ilev_ta_door",
    "v_ilev_247door",
    "v_ilev_247door_r",
    "v_ilev_lostdoor",
    "v_ilev_bs_door",
    "v_ilev_cs_door01",
    "v_ilev_cs_door01_r",
    "v_ilev_gc_door03",
    "v_ilev_gc_door04",
    "v_ilev_clothmiddoor",
    "v_ilev_clothmiddoor",
    "prop_shop_front_door_l",
    "prop_shop_front_door_r",
    "prop_com_ls_door_01",
    "v_ilev_carmod3door",
}

local object_stuff = {
    names = {
        "Ferris Wheel",
        "UFO",
        "Windmill",
        "Cement Mixer",
        "Scaffolding",
        "Big Bowling Ball",
        "Big Soccer Ball",
        "Big Orange Ball",
        "Stunt Ramp",

    },
    objects = {
        "prop_ld_ferris_wheel",
        "p_spinning_anus_s",
        "prop_windmill_01",
        "prop_staticmixer_01",
        "prop_towercrane_02a",
        "des_scaffolding_root",
        "stt_prop_stunt_bowling_ball",
        "stt_prop_stunt_soccer_ball",
        "prop_juicestand",
        "stt_prop_stunt_jump_l",
    }
}

local attackers = {
    names = {
        "Clown",
        "Mexican",
        "Zombie",
        "Swat Officer",
        "Juggernaut",
        "Astronaut",
        "Bigfoot",
        "Alien",
        "Space Monkey",
        "Impotent Rage",
        "Lester",
    },
    mdl = {
        "s_m_y_clown_01",
        "u_m_y_mani",
        "u_m_y_zombie_01",
        "s_m_y_swat_01",
        "u_m_y_juggernaut_01",
        "s_m_m_movspace_01",
        "ig_orleans",
        "s_m_m_movalien_01",
        "u_m_y_pogo_01",
        "u_m_y_imporage",
        "ig_lestercrest"
    }
}

local interiors = {
    {"Safe Space [AFK Room]", {x=-158.71494, y=-982.75885, z=149.13135}},
    {"Torture Room", {x=147.170, y=-2201.804, z=4.688}},
    {"Mining Tunnels", {x=-595.48505, y=2086.4502, z=131.38136}},
    {"Omegas Garage", {x=2330.2573, y=2572.3005, z=46.679367}},
    {"50 Car Garage", {x=520.0, y=-2625.0, z=-50.0}},
    {"Server Farm", {x=2474.0847, y=-332.58887, z=92.9927}},
    {"Character Creation", {x=402.91586, y=-998.5701, z=-99.004074}},
    {"Life Invader Building", {x=-1082.8595, y=-254.774, z=37.763317}},
    {"Mission End Garage", {x=405.9228, y=-954.1149, z=-99.6627}},
    {"Destroyed Hospital", {x=304.03894, y=-590.3037, z=43.291893}},
    {"Stadium", {x=-256.92334, y=-2024.9717, z=30.145584}},
    {"Comedy Club", {x=-430.00974, y=261.3437, z=83.00648}},
    {"Record A Studios", {x=-1010.6883, y=-49.127754, z=-99.40313}},
    {"Bahama Mamas Nightclub", {x=-1394.8816, y=-599.7526, z=30.319544}},
    {"Janitors House", {x=-110.20285, y=-8.6156025, z=70.51957}},
    {"Therapists House", {x=-1913.8342, y=-574.5799, z=11.435149}},
    {"Martin Madrazos House", {x=1395.2512, y=1141.6833, z=114.63437}},
    {"Floyds Apartment", {x=-1156.5099, y=-1519.0894, z=10.632717}},
    {"Michaels House", {x=-813.8814, y=179.07889, z=72.15914}},
    {"Franklins House (Strawberry)", {x=-14.239959, y=-1439.6913, z=31.101551}},
    {"Franklins House (Vinewood Hills)", {x=7.3125067, y=537.3615, z=176.02803}},
    {"Trevors House", {x=1974.1617, y=3819.032, z=33.436287}},
    {"Lesters House", {x=1273.898, y=-1719.304, z=54.771}},
    {"Lesters Warehouse", {x=713.5684, y=-963.64795, z=30.39534}},
    {"Lesters Office", {x=707.2138, y=-965.5549, z=30.412853}},
    {"Meth Lab", {x=1391.773, y=3608.716, z=38.942}},
    {"Acid Lab", {x=484.69, y=-2625.36, z=-49.0}},
    {"Morgue Lab", {x=495.0, y=-2560.0, z=-50.0}},
    {"Humane Labs", {x=3625.743, y=3743.653, z=28.69009}},
    {"Motel Room", {x=152.2605, y=-1004.471, z=-99.024}},
    {"Police Station", {x=443.4068, y=-983.256, z=30.689589}},
    {"Bank Vault", {x=263.39627, y=214.39891, z=101.68336}},
    {"Blaine County Bank", {x=-109.77874, y=6464.8945, z=31.626724}}, -- credit to fluidware for telling me about this one
    {"Tequi-La-La Bar", {x=-564.4645, y=275.5777, z=83.074585}},
    {"Scrapyard Body Shop", {x=485.46396, y=-1315.0614, z=29.2141}},
    {"The Lost MC Clubhouse", {x=980.8098, y=-101.96038, z=74.84504}},
    {"Vangelico Jewlery Store", {x=-629.9367, y=-236.41296, z=38.057056}},
    {"Airport Lounge", {x=-913.8656, y=-2527.106, z=36.331566}},
    {"Morgue", {x=240.94368, y=-1379.0645, z=33.74177}},
    {"Union Depository", {x=1.298771, y=-700.96967, z=16.131021}},
    {"Fort Zancudo Tower", {x=-2357.9187, y=3249.689, z=101.45073}},
    {"Agency Interior", {x=-1118.0181, y=-77.93254, z=-98.99977}},
    {"Agency Garage", {x=-1071.0494, y=-71.898506, z=-94.59982}},
    {"Terrobyte Interior", {x=-1421.015, y=-3012.587, z=-80.000}},
    {"Bunker Interior", {x=899.5518,y=-3246.038, z=-98.04907}},
    {"IAA Office", {x=128.20, y=-617.39, z=206.04}},
    {"FIB Top Floor", {x=135.94359, y=-749.4102, z=258.152}},
    {"FIB Floor 47", {x=134.5835, y=-766.486, z=234.152}},
    {"FIB Floor 49", {x=134.635, y=-765.831, z=242.152}},
    {"Big Fat White Cock", {x=-31.007448, y=6317.047, z=40.04039}},
    {"Strip Club DJ Booth", {x=121.398254, y=-1281.0024, z=29.480522}},
}

local station_name = {
    ["Blaine County Radio"] = "RADIO_11_TALK_02", 
    ["The Blue Ark"] = "RADIO_12_REGGAE",
    ["Worldwide FM"] = "RADIO_13_JAZZ",
    ["FlyLo FM"] = "RADIO_14_DANCE_02",
    ["The Lowdown 9.11"] = "RADIO_15_MOTOWN",
    ["The Lab"] = "RADIO_20_THELAB",
    ["Radio Mirror Park"] = "RADIO_16_SILVERLAKE",
    ["Space 103.2"] = "RADIO_17_FUNK",
    ["Vinewood Boulevard Radio"] = "RADIO_18_90S_ROCK",
    ["Blonded Los Santos 97.8 FM"] = "RADIO_21_DLC_XM17",
    ["Los Santos Underground Radio"] = "RADIO_22_DLC_BATTLE_MIX1_RADIO",
    ["iFruit Radio"] = "RADIO_23_DLC_XM19_RADIO",
    ["Motomami Lost Santos"] = "RADIO_19_USER",
    ["Los Santos Rock Radio"] = "RADIO_01_CLASS_ROCK",
    ["Non-Stop-Pop FM"] = "RADIO_02_POP",
    ["Radio Los Santos"] = "RADIO_03_HIPHOP_NEW",
    ["Channel X"] = "RADIO_04_PUNK",
    ["West Coast Talk Radio"] = "RADIO_05_TALK_01",
    ["Rebel Radio"] = "RADIO_06_COUNTRY", 
    ["Soulwax FM"] = "RADIO_07_DANCE_01",
    ["East Los FM"] = "RADIO_08_MEXICAN",
    ["West Coast Classics"] = "RADIO_09_HIPHOP_OLD",
    ["Media Player"] = "RADIO_36_AUDIOPLAYER",
    ["The Music Locker"] = "RADIO_35_DLC_HEI4_MLR",
    ["Kult FM"] = "RADIO_34_DLC_HEI4_KULT",
    ["Still Slipping Los Santos"] = "RADIO_27_DLC_PRHEI4",
}

local values = {
    [1] = 50,
    [2] = 88,
    [3] = 160,
    [4] = 208,
}

local launch_vehicle = {"Launch Up", "Launch Forward", "Launch Backwards", "Launch Down", "Slingshot"}
local invites = {"Yacht", "Office", "Clubhouse", "Office Garage", "Custom Auto Shop", "Apartment"}
local style_names = {"Normal", "Semi-Rushed", "Reverse", "Ignore Lights", "Avoid Traffic", "Avoid Traffic Extremely", "Take Shortest Path", "Sometimes Overtake Traffic"}
local stand_notif = "My brother in christ, what are you doing?! This will not work on a fellow stand user."
local drivingStyles = {786603, 1074528293, 1076, 2883621, 786468, 6, 262144, 5}
local bones = {12844, 24816, 24817, 24818, 35731, 31086}
local interior_stuff = {0, 233985, 169473, 169729, 169985, 170241, 177665, 177409, 185089, 184833, 184577, 163585, 167425, 167169, 138241}

local self = menu.list(menu.my_root(), "Self")
local online = menu.list(menu.my_root(), "Online")
local players_list = menu.list(menu.my_root(), "Players")
local lobby = menu.list(players_list, "All Players")
local vehicles = menu.list(menu.my_root(), "Vehicles")
local missions = menu.list(menu.my_root(), "Missions")
local weapons = menu.list(menu.my_root(), "Weapons")
local funfeatures = menu.list(menu.my_root(), "Fun Features")
local teleport = menu.list(menu.my_root(), "Teleport")
local detections = menu.list(menu.my_root(), "Detections", {}, "Note: Enabling all detections may lead to a slight drop in fps.")
local modder_detections = menu.list(detections, "Modder Detections")
local normal_detections = menu.list(detections, "Normal Detections")
local bailOnAdminJoin = false
local protections = menu.list(menu.my_root(), "Protections")
local misc = menu.list(menu.my_root(), "Miscellaneous", {}, "")

speed = menu.get_value(menu.ref_by_path("Self>Movement>Levitation>Movement Speed"))
sprint = menu.get_value(menu.ref_by_path("Self>Movement>Levitation>Sprint Multiplier"))

local menus = {}
local function player_list(pid)
    if NETWORK_IS_SESSION_ACTIVE()then 
        menus[pid] = menu.list(players_list, players.get_name(pid), {}, "", function()
            menu.trigger_commands("jinxscript " .. players.get_name(pid))
        end)
    end
end

local function handle_player_list(pid) -- thanks to dangerman and aaron for showing me how to delete players properly
    local ref = menus[pid]
    if not players.exists(pid) then
        if ref then
            menu.delete(ref)
            menus[pid] = nil
        end
    end
end

players.on_join(player_list)
players.on_leave(handle_player_list)

if not SCRIPT_SILENT_START then
    util.toast("Hello, " .. players.get_name(players.user()) .. "! \nWelcome To JinxScript!\n" .. "Official Discord: https://discord.gg/hjs5S93kQv")
end

local function player(pid) 
    if pid != players.user() and (players.get_name(pid) == "Prizuhm" or players.get_name(pid) == "Iinustechtips") then
        util.toast(lang.get_string(0xD251C4AA, lang.get_current()):gsub("{(.-)}", {player = players.get_name(pid), reason = "JinxScript Developer"}), TOAST_DEFAULT)
        players.add_detection(pid, "JinxScript Developer", TOAST_DEFAULT, 1)
    end

    menu.divider(menu.player_root(pid), "JinxScript")
    local bozo = menu.list(menu.player_root(pid), "JinxScript", {"JinxScript"}, "")

    local friendly = menu.list(bozo, "Friendly", {}, "")
    menu.action(friendly, "Rank Them Up", {}, "Gives them ~175k RP. Can boost a lvl 1 to lvl 30", function()
        menu.trigger_commands("givecollectibles" .. players.get_name(pid))
    end)

    local jinx_pet_ply
    menu.toggle_loop(friendly, "Pet Jinx", {}, "", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if not jinx_pet_plyr or not DOES_ENTITY_EXIST(jinx_pet_plyr) then
            local jinx = util.joaat("a_c_cat_01")
            RequestModel(jinx)
            local pos = players.get_position(pid)
            jinx_pet_plyr = entities.create_ped(28, jinx, pos, 0)
            entities.set_can_migrate(jinx_pet_plyr, false)
            SET_PED_COMPONENT_VARIATION(jinx_pet_plyr, 0, 0, 1, 0)
            SET_ENTITY_INVINCIBLE(jinx_pet_plyr, true)
        end
        TASK_FOLLOW_TO_OFFSET_OF_ENTITY(jinx_pet_plyr, ped, 0, -0.3, 0, 7.0, -1, 1.5, true)
    end, function()
        entities.delete(jinx_pet_plyr)
    end)

    local tp 
    tp = player_toggle_loop(friendly, pid, "Give Teleport Ability", {}, "Chat command is !waypoint. Player must be in a vehicle.", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local veh = GET_VEHICLE_PED_IS_USING(ped)

        chat.on_message(function(packet_sender, message_sender, text, team_chat)
            if string.contains(text, "!waypoint") and IS_PED_IN_VEHICLE(ped, veh, false) then  
                if players.get_name(message_sender) == players.get_name(pid) and IS_PED_IN_ANY_VEHICLE(ped, false) then
                    menu.trigger_commands("wptp" .. players.get_name(pid))
                else
                    util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
                end
            end
        end)
    end)
  
    menu.action(friendly, "Give Drift Tires", {"drifttires"}, "Adds drift tires to their vehicle.", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        GetControlOfEntity(vehicle)
        SET_DRIFT_TYRES(vehicle, true)
    end)

    player_toggle_loop(friendly, pid, "Autofill Rocket Boost", {""}, "", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        if IS_ROCKET_BOOST_ACTIVE(vehicle) then
            repeat
                util.yield()
            until not IS_ROCKET_BOOST_ACTIVE(vehicle)
            NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
            SET_ROCKET_BOOST_FILL(vehicle, 100.0)
        end
    end)

    local boost_veh_friendly
    boost_veh_friendly = player_toggle_loop(friendly, pid, "Horn Boost", {"hornboost"}, "", function() -- the only functional method that works everytime, applying force doesnt sync well since it requires entity control
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if not IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
            boost_veh_friendly.value = false
        return end
        local veh = GET_VEHICLE_PED_IS_USING(ped)
        local mdl = util.joaat("stt_prop_track_speedup")
        RequestModel(mdl)
        if IS_PLAYER_PRESSING_HORN(pid) then
            local boostpad = entities.create_object(mdl, GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(veh, 0.0, GET_ENTITY_SPEED(veh)/2, -3.0), false, false, false)
            SET_ENTITY_VISIBLE(boostpad, false)
            SET_OBJECT_SPEED_BOOST_AMOUNT(boostpad, 100)
            entities.set_can_migrate(boostpad, false)
            util.yield(500)
            entities.delete(boostpad)
        end
    end)

    local griefing = menu.list(bozo, "Trolling & Griefing", {}, "")    
    local glitch_player_root = menu.list(griefing, "Glitch Player")
    local object_hash = util.joaat("prop_ld_ferris_wheel")
    menu.list_select(glitch_player_root, "Object", {"glitchplayerobj"}, "", object_stuff.names, 1, function(index)
        object_hash = util.joaat(object_stuff.objects[index])
    end)
    local delay = 150
    menu.slider(glitch_player_root, "Spawn Delay", {"spawndelay"}, "Note: Low spawn delays may be marked as a modded event if used on a stand user.", 0, 3000, 150, 10, function(amount)
        delay = amount
    end)

    local glitchplayer
    local glitch_ply_notif = true
    glitchplayer = player_toggle_loop(glitch_player_root, pid, "Glitch Player", {"glitchplayer"}, "Blocked by menus with entity spam protections.", function()
        if glitch_ply_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                glitch_ply_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)

        if not DOES_ENTITY_EXIST(ped) then
            util.toast(players.get_name(pid) .. " is too far. :/")
            glitchvalue = false
        util.stop_thread() end

        local glitch_hash = object_hash
        local mdl = util.joaat("rallytruck")
        RequestModel(glitch_hash)
        RequestModel(mdl)
        local obj = entities.create_object(glitch_hash, pos)
        local veh = entities.create_vehicle(mdl, pos, 0)
        SET_ENTITY_VISIBLE(obj, false)
        SET_ENTITY_VISIBLE(veh, false)
        SET_ENTITY_INVINCIBLE(obj, true)
        SET_ENTITY_COLLISION(obj, true, true)
        APPLY_FORCE_TO_ENTITY(veh, 1, 0.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        util.yield(delay)
        entities.delete(obj)
        entities.delete(veh)
    end)

    local glitch_veh_root = menu.list(griefing, "Glitch Vehicle")
    local glitch_hash = util.joaat("prop_ld_ferris_wheel")
    menu.list_select(glitch_veh_root, "Object", {"glitchvehobj"}, "", object_stuff.names, 1, function(index)
        glitch_hash = util.joaat(object_stuff.objects[index])
    end)
    
    local glitchveh
    local glitch_veh_notif = true
    glitchveh = player_toggle_loop(glitch_veh_root, pid, "Glitch Vehicle", {"glitchvehicle"}, "Works on all menus and isn't detected by any.", function() -- credits to soul reaper for base concept
        if glitch_veh_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                glitch_veh_notif = false 
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = GET_ENTITY_COORDS(ped, false)
        local player_veh = GET_VEHICLE_PED_IS_USING(ped)
        local veh_model = players.get_vehicle_model(pid)
        local seat_count = GET_VEHICLE_MODEL_NUMBER_OF_SEATS(veh_model)
        RequestModel(glitch_hash)
        
        if not DOES_ENTITY_EXIST(ped) then
            util.toast(players.get_name(pid) .. "Is too far. :/")
            glitchveh.value = false
            util.stop_thread() 
        end

        if not IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
            glitchveh.value = false
            util.stop_thread() 
        end

        if not ARE_ANY_VEHICLE_SEATS_FREE(player_veh) then
            util.toast("No free seats are available. :/")
            glitchveh.value = false
            util.stop_thread() 
        end

        glitched_ped = CREATE_RANDOM_PED(pos)
        glitch_obj = entities.create_object(glitch_hash, pos)
        local things = {glitched_ped, glitch_obj}
        entities.set_can_migrate(glitched_ped, false)
        entities.set_can_migrate(glitch_obj, false)
        for things as spawned_objects do
            NETWORK_REQUEST_CONTROL_OF_ENTITY(spawned_objects)
            SET_ENTITY_VISIBLE(spawned_objects, false)
            SET_ENTITY_INVINCIBLE(spawned_objects, true)
        end

        for i = 0, seat_count -1 do
            if ARE_ANY_VEHICLE_SEATS_FREE(player_veh) then
                local emptyseat = i
                for l = 1, 25 do
                    SET_PED_INTO_VEHICLE(glitched_ped, player_veh, emptyseat)
                    ATTACH_ENTITY_TO_ENTITY(glitch_obj, glitched_ped, 0, 0, 0, 0, 0, 0, 0, true, true, false, 0, true)
                    SET_ENTITY_COLLISION(glitch_obj, true, true)
                    util.yield()
                end
            end
        end
        if glitched_ped != nil then
            entities.delete(glitched_ped) 
        end
        if glitch_obj != nil then 
            entities.delete(glitch_obj)
        end
    end, function()
        if glitched_ped != nil then
            entities.delete(glitched_ped) 
        end
        if glitch_obj != nil then 
            entities.delete(glitch_obj)
        end
    end)

    local glitchforcefield
    local glitch_ff_notif = true
    glitchforcefield = player_toggle_loop(griefing, pid, "Glitched Forcefield", {"forcefield"}, "Blocked by menus with entity spam protections.", function()
        if glitch_ff_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                glitch_ff_notif = false
            end
        end
        local glitch_hash = util.joaat("p_spinning_anus_s")
        RequestModel(glitch_hash)

        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        
        if not DOES_ENTITY_EXIST(ped) then
            util.toast(players.get_name(pid) .. " is too far. :/")
            glitchforcefield.value = false
        util.stop_thread() end

        if IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(players.get_name(pid) .. " is in a vehicle. :/")
            glitchforcefield.value = false
        util.stop_thread() end

        local obj = entities.create_object(glitch_hash, pos)
        SET_ENTITY_VISIBLE(obj, false)
        SET_ENTITY_COLLISION(obj, true, true)
        util.yield()
        entities.delete(obj) 
    end)

    local time = 0
    local hijack_veh_notif = true
    menu.action(griefing, "Ped Hijack", {"hijack"}, "Spawns a ped to take them out of their vehicle, lock it, and drive away. (Note: May also be inconsistent on higher ping players)", function()
        if pid == players.user() then 
            util.toast(lang.get_localised(-1974706693))
            return
        end

        if hijack_veh_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                hijack_veh_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        local driver = NETWORK_GET_PLAYER_INDEX_FROM_PED(GET_PED_IN_VEHICLE_SEAT(vehicle, -1))
        local passenger = NETWORK_GET_PLAYER_INDEX_FROM_PED(GET_PED_IN_VEHICLE_SEAT(vehicle, -2))
        pos.z -= 50
        if vehicle == 0 then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
        return end

        if not IS_PED_A_PLAYER(GET_PED_IN_VEHICLE_SEAT(vehicle, -1)) then
            util.toast("Vehicle has already been hijacked. :D")
        return end

        local spawned_ped = CREATE_RANDOM_PED(pos)
        SET_ENTITY_INVINCIBLE(spawned_ped, true)
        SET_ENTITY_VISIBLE(spawned_ped, false)
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(spawned_ped, true)
        TASK_ENTER_VEHICLE(spawned_ped, vehicle, 1000, GET_SEAT_PED_IS_IN(ped), 1.0, (1 << 1) | (1 << 3) | (1 << 4) | (1 << 9))
        entities.give_control_by_handle(spawned_ped, pid)
        repeat
            time += 1   
            if time > 300 and not IS_PED_IN_ANY_VEHICLE(spawned_ped, false) then
                util.toast("Failed to hijack " .. players.get_name(pid) .. "'s vehicle. :/")
                entities.delete(spawned_ped)
                time = 0
                break 
            end
            util.yield()
        until GET_IS_TASK_ACTIVE(ped, 2)
        if GET_IS_TASK_ACTIVE(ped, 2) then
            repeat
                util.yield()
            until not GET_IS_TASK_ACTIVE(ped, 2) or IS_PED_IN_ANY_VEHICLE(spawned_ped, false)
            TASK_VEHICLE_DRIVE_WANDER(spawned_ped, vehicle, 9999.0, 6) 
            SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, pid, true)
            util.toast("Bippity boppity their car is now your property :D")
            util.yield(1000)
        end
        if not GET_IS_TASK_ACTIVE(spawned_ped) or GET_IS_TASK_ACTIVE(spawned_ped, 15) then
            repeat
                TASK_VEHICLE_DRIVE_WANDER(spawned_ped, vehicle, 9999.0, 6) -- giving task again cus doesnt work sometimes
                util.yield()
            until GET_IS_TASK_ACTIVE(spawned_ped, 151)
        end
        util.yield(5000)
        if spawned_ped != nil and not IS_PED_IN_ANY_VEHICLE(spawned_ped, false) then -- 2nd check cus sometimes doesnt delete the first time
            if not NETWORK_HAS_CONTROL_OF_ENTITY(spawned_ped) then
                repeat
                    NETWORK_REQUEST_CONTROL_OF_ENTITY(spawned_ped)
                    util.yield()
                until NETWORK_HAS_CONTROL_OF_ENTITY(spawned_ped)
                repeat 
                    entities.delete(spawned_ped)
                    util.yield()
                until not DOES_ENTITY_EXIST(spawned_ped)
            end
        end
    end)

    local hijack
    local fail_count = 0
    local auto_hijack_veh_notif = true
    hijack = player_toggle_loop(griefing, pid, "Auto Ped Hijack", {"autohijack"}, "Will keep hijacking any vehicle they try to drive.", function()
        if pid == players.user() then 
            util.toast(lang.get_localised(-1974706693))
            return
        end
        
        if auto_hijack_veh_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                auto_hijack_veh_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        if IS_PED_IN_VEHICLE(ped, vehicle, false) then
            local spawned_ped = CREATE_RANDOM_PED(pos.x, pos.y - 10, pos.z)
            SET_ENTITY_INVINCIBLE(spawned_ped, true)
            SET_ENTITY_VISIBLE(spawned_ped, false)
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(spawned_ped, true)
            TASK_ENTER_VEHICLE(spawned_ped, vehicle, 1000, GET_SEAT_PED_IS_IN(ped), 1.0, (1 << 1) | (1 << 3) | (1 << 4) | (1 << 9))
            entities.give_control_by_handle(spawned_ped, pid)
            util.yield(1000)
            if GET_IS_TASK_ACTIVE(ped, 2) then
                repeat
                    util.yield()
                until not GET_IS_TASK_ACTIVE(ped, 2)
            end
            if fail_count >= 5 then
                util.toast("Failed to hijack player too many times. Disabling feature...")
                fail_count = 0
                
                hijack.value = false
            end
            if IS_PED_IN_ANY_VEHICLE(spawned_ped, false) then
                util.yield(1500)
                TASK_VEHICLE_DRIVE_WANDER(spawned_ped, vehicle, 9999.0, 6)
                SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, pid, true)
                fail_count = 0
            else
                fail_count += 1
                entities.delete(spawned_ped)
            end
            util.yield(500)
        end
    end, function()
        fail_count = 0
    end)
    
    local pos_ctr = 0
    local warp_ctr = 0
    local prev_pos = 0
    local takeover_notif = true
    menu.action(griefing, "Takeover Vehicle", {"takeover"}, "Warps you into their seat and kicks them out.", function() -- hey you, ya, you! I know you're gonna skid this. go make your own shit retard.
        local spectate = menu.ref_by_rel_path(menu.player_root(pid), "Spectate>Nuts Method")
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)

        if pid == players.user() then 
            util.toast(lang.get_localised(-1974706693))
            return
        end

        if not IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
        return end

        if takeover_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                takeover_notif = false
            end
        end

        if prev_pos == 0 then
            repeat -- in rare situations, the game fails to get your position, this seems to fix that (maybe)
                if pos_ctr > 250 then
                    util.toast("Encountered an issue when trying to get previous player location. :/")
                    pos_ctr = 0
                    return
                end
                prev_pos = players.get_position(players.user()) 
                pos_ctr += 1
                util.yield()
            until prev_pos != 0
        end

        if GET_VEHICLE_PED_IS_IN(players.user_ped(), false) != 0 then
            prev_vehicle = GET_VEHICLE_PED_IS_USING(players.user_ped())
            prev_seat = GET_SEAT_PED_IS_IN(players.user_ped())
        end

        FREEZE_ENTITY_POSITION(players.user_ped(), true)
        SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), pos.x, pos.y, pos.z - 25, false, false, false) -- not needed but helps
        TASK_ENTER_VEHICLE(players.user_ped(), vehicle, 1000, -1, 1.0, (1 << 1) | (1 << 3) | (1 << 4) | (1 << 9))
        spectate.value = true
        util.yield(1000)
        if GET_IS_TASK_ACTIVE(ped, 2) then
            repeat
                util.yield()
            until IS_PED_SITTING_IN_VEHICLE(players.user_ped(), vehicle) or not GET_IS_TASK_ACTIVE(ped, 2)
            spectate.value = false
            if not IS_PED_SITTING_IN_VEHICLE(players.user_ped(), vehicle) then -- in the unlikely case TASK_ENTER_VEHICLE runs into an issue and doesnt place you into the vehicle properly
                repeat
                    if warp_ctr > 250 then
                        util.toast("Failed to warp into " .. players.get_name(pid) .. "'s vehicle. :/")
                        warp_ctr = 0
                        return
                    end
                    TASK_WARP_PED_INTO_VEHICLE(players.user_ped(), vehicle, -1)
                    warp_ctr += 1
                    util.yield()
                until IS_PED_SITTING_IN_VEHICLE(players.user_ped(), vehicle)
            end
            util.yield(500)
            if not IS_PED_SITTING_IN_VEHICLE(players.user_ped(), vehicle) then
                if prev_vehicle != nil then
                    TASK_WARP_PED_INTO_VEHICLE(players.user_ped(), prev_vehicle, prev_seat)
                else
                    SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), prev_pos, false, false, false)
                end
                FREEZE_ENTITY_POSITION(players.user_ped(), false)
                SET_ENTITY_VISIBLE(players.user_ped(), true)
                util.toast("Failed to takeover " .. players.get_name(pid) .. "'s vehicle. :/")
                prev_pos = 0
                return
            end

            FREEZE_ENTITY_POSITION(players.user_ped(), false)
            util.toast("Bippity boppity their car is now your property :D")
        else
            spectate.value = false
            FREEZE_ENTITY_POSITION(players.user_ped(), false)
            if prev_vehicle != nil then
                TASK_WARP_PED_INTO_VEHICLE(players.user_ped(), prev_vehicle, prev_seat)
            else
                SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), prev_pos, false, false, false)
            end
            SET_ENTITY_VISIBLE(players.user_ped(), true)
            util.toast("Failed to takeover " .. players.get_name(pid) .. "'s vehicle. :/")
            prev_pos = 0
        end
    end)

    local boost_veh
    local boost_notif = true
    boost_veh = player_toggle_loop(griefing, pid, "Boost Vehicle", {"boost"}, "Uses Newtons laws of physics to propell their vehicle forward.", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if not IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
            boost_veh.value = false
        return end
        if boost_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                boost_notif = false
            end
        end
        local veh = GET_VEHICLE_PED_IS_USING(ped)
        local mdl = util.joaat("stt_prop_track_speedup")
        RequestModel(mdl)
        if boostpad == nil or not DOES_ENTITY_EXIST(boostpad) then
            boostpad = entities.create_object(mdl, GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(veh, 0.0, 5.0, -3.0))
            SET_ENTITY_VISIBLE(boostpad, false)
            SET_OBJECT_SPEED_BOOST_AMOUNT(boostpad, 100)
            entities.set_can_migrate(boostpad, false)
        end
        util.yield(500)
        SET_ENTITY_COORDS_NO_OFFSET(boostpad, GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(veh, 0.0, GET_ENTITY_SPEED(veh)/2, -3.0), false, false, false)
        SET_ENTITY_HEADING(boostpad, GET_ENTITY_HEADING(veh) - 90)
    end, function()
        if boostpad != nil then
            entities.delete(boostpad)
        end
    end)
    
    local slowdown_veh
    local slow_notif = true
    slowdown_veh = player_toggle_loop(griefing, pid, "Slow Down Vehicle", {"slowdown"}, "Bypasses Newtons laws of physics to halt their vehicle to a snails pace.", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if not IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
            slowdown_veh.value = false
        return end
        if slow_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                slow_notif = false
            end
        end
        local veh = GET_VEHICLE_PED_IS_USING(ped)
        local mdl = util.joaat("stt_prop_track_slowdown")
        RequestModel(mdl)
        if brakepad == nil or not DOES_ENTITY_EXIST(brakepad) then
            brakepad = entities.create_object(mdl, GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(veh, 0.0, 5.0, -3.0))
            SET_ENTITY_VISIBLE(brakepad, false)
            entities.set_can_migrate(brakepad, false)
        end
        util.yield(500)
        SET_ENTITY_COORDS_NO_OFFSET(brakepad, GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(veh, 0.0, GET_ENTITY_SPEED(veh)/2, -3.0), false, false, false)
        SET_ENTITY_HEADING(brakepad, GET_ENTITY_HEADING(veh) - 90)
    end, function()
        if brakepad != nil then
            entities.delete(brakepad)
        end
    end)

    local launch_player
    local launch_notif = true
    launch_player = player_toggle_loop(griefing, pid, "Launch Player", {"launch"}, "Works on most menus.", function()
        if launch_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                launch_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local mdl = util.joaat("mule5")
        local pos = players.get_position(pid)
        RequestModel(mdl)
                    
        mule_veh = entities.create_vehicle(mdl, GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.0, -3.0), GET_ENTITY_HEADING(ped))
        entities.set_can_migrate(mule_veh, false)
        SET_ENTITY_VISIBLE(mule_veh, false)
        util.yield(250)
        APPLY_FORCE_TO_ENTITY(mule_veh, 1, 0.0, 0.0, 1000.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        util.yield(2500)
        entities.delete(mule_veh)
        repeat
            util.yield()
        until GET_ENTITY_SPEED(ped) < 30.0
    end, function()
        if mule_veh != 0 and DOES_ENTITY_EXIST(mule_veh) then 
            entities.delete(mule_veh)
        end
    end)
    local vent = {}
    local stumble_notif = true
    player_toggle_loop(griefing, pid, "Stumble Player", {"stumble"}, "", function()
        if stumble_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                stumble_notif = false
            end
        end
        local mdl = util.joaat("prop_roofvent_06a")
        local pos = players.get_position(pid)
        pos.z -= 2.4
        RequestModel(mdl)
        local temp_v3 = v3.new(0, 0, 0)
        local middle_vent = entities.create_object(mdl, v3(pos.x, pos.y, pos.z))
        SET_ENTITY_VISIBLE(middle_vent, false)
        for i = 1, 4 do
            local angle = (i / 4) * 360
            temp_v3.z = angle
            local obj_pos = temp_v3:toDir()
            obj_pos:mul(1.25)
            obj_pos:add(pos)
            vent[i] = entities.create_object(mdl, obj_pos)
            SET_ENTITY_VISIBLE(vent[i], false)
        end
        util.yield(500)
        entities.delete(middle_vent)
        for vent as obj do
            entities.delete(obj)
        end
    end)

    local black_smoke
    local smoke_notif = true
    black_smoke = player_toggle_loop(griefing, pid, "Smokescreen", {"smoke"}, "Fills up their screen with black smoke.", function() 
        if smoke_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                smoke_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        REQUEST_NAMED_PTFX_ASSET("scr_as_trans")
        USE_PARTICLE_FX_ASSET("scr_as_trans")
        if ptfx == nil or not DOES_PARTICLE_FX_LOOPED_EXIST(ptfx) then
            ptfx = START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY("scr_as_trans_smoke", ped, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, false, false, false, 0, 0, 0, 255)
        end
    end, function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        REMOVE_PARTICLE_FX(ptfx)
        REMOVE_NAMED_PTFX_ASSET("scr_as_trans")
    end)
    
    local gravity = menu.list(griefing, "Gravitate Player", {}, "Works on all menus but can be detected. Also doesn't work on players with godmode.")
    local force = 1.00
    menu.slider_float(gravity, "Gravitational Force", {"force"}, "", 0, 100, 100, 10, function(value)
        force = value / 100
    end)
 
    local gravitate
    local gravitate_notif = true
    gravitate = player_toggle_loop(gravity, pid, "Gravitate Player", {"gravitate"}, "", function()
        if gravitate_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                gravitate_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_IN(ped)

        for interior_stuff as id do
            if players.is_godmode(pid) and (not NETWORK_IS_PLAYER_FADING(pid) and IS_ENTITY_VISIBLE(ped)) and GET_SPAWN_STATE(pid) != 0 and GET_INTERIOR_FROM_PLAYER(pid) == id then
                util.toast(players.get_name(pid) .. " is in godmode. :/")
                gravitate.value = false
            util.stop_thread() end
        end
        ADD_EXPLOSION(players.get_position(pid), 29, force, false, true, 0.0, true)
    end)
    
    local attacker_root = menu.list(griefing, "Exploding Attackers")
    local spawn_root = menu.list(attacker_root, "Spawn")
    menu.divider(attacker_root, "Meta")
    local attacker_mdl = util.joaat("s_m_y_clown_01")
    menu.list_select(spawn_root, "Ped Model", {"pedmdl"}, "", attackers.names, 1, function(index)
        attacker_mdl = util.joaat(attackers.mdl[index])
    end)

    local immortality = false
    menu.toggle(attacker_root, "Immortality", {}, "", function(toggled)
        immortality = toggled
    end)

    local detonate_dist = 5.00
    menu.slider_float(attacker_root, "Detonate Distance", {"detonatedistance"}, "", 0, 1000, 500, 100, function(value)
        detonate_dist = value / 100
    end)

    menu.action(spawn_root, "Send Attacker", {"bomb"}, "", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local dict = "swimming@scuba"
        local name = "dive_glide"
        RequestAnimation(dict)
        RequestModel(attacker_mdl)
        pos.x += 15
        pos.y += math.random(-25, 25)
        if attacker == nil or not DOES_ENTITY_EXIST(attacker) then
            attacker = entities.create_ped(26, attacker_mdl, pos, 0)
            SET_ENTITY_INVINCIBLE(attacker, immortality)
            SET_PED_CAN_RAGDOLL(attacker, false)
            SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(attacker, true)
            entities.set_can_migrate(attacker, false)
            TASK_PLAY_ANIM(attacker, dict, name, 5.0, 2.5, -1, 1|16|32, 1.0, false, false, false)
            repeat
                TASK_GO_TO_ENTITY(attacker, ped,  -1, 1,  500.0, 0.0, 0)
                local pos = players.get_position(pid)
                local ped_pos = v3.distance(GET_ENTITY_COORDS(attacker), pos)
                util.yield(100)
            until ped_pos < detonate_dist
            SET_ENTITY_INVINCIBLE(attacker, false)
            ADD_EXPLOSION(GET_ENTITY_COORDS(attacker), 82, 10000.0, true, false, 1.0, false)
            util.yield(1000)
            entities.delete(attacker)
        elseif DOES_ENTITY_EXIST(attacker) and IS_PED_DEAD_OR_DYING(attacker) then
            entities.delete(attacker)
        else
            util.toast("You already have an active attacker. :/")
        end
    end)

    menu.action(attacker_root, "Delete Attacker", {}, "", function()
        if attacker != nil or DOES_ENTITY_EXIST(attacker) then
            entities.delete(attacker)
        end
    end)
    
    menu.toggle_loop(griefing, "Confused Homing Rockets", {}, "Will spawn a random flare under the map to make the rockets go off in a random direction.", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        if IS_PED_SHOOTING(ped) and IS_PED_ARMED(ped, 2) then
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x + math.random(-50, 50), pos.y + math.random(-50, 50), pos.z - 2, pos.x, pos.y, pos.z, 0, true, util.joaat("weapon_flaregun"), players.user_ped(), true, false, 0.0)
        end
    end)
    
    menu.toggle_loop(griefing, "Suicidal Homing Rockets", {}, "Will make their homing rockets turn around and target themselves.", function()
        local things = {-0.1, 0.1}
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local pos1 = GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, things[math.random(#things)], -15.0, -2.0)
        local pos2 = GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 0.0, 0.0)
        if IS_PED_SHOOTING(ped) and IS_PED_ARMED(ped, 2) then
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos1, pos2, 0, true, util.joaat("weapon_flaregun"), players.user_ped(), true, false, 0.0)
            util.yield(2500)
            CLEAR_AREA_OF_PROJECTILES(pos, 25.0, 0)
        end
    end)

    menu.action(griefing, "Send To Online Intro", {"intro"}, "Sends player to the GTA Online intro.", function()
        if StandUser(pid) then util.toast(stand_notif) util.stop_thread() end
        local int = memory.read_int(memory.script_global(1894573 + 1 + (pid * 608) + 510))
        util.trigger_script_event(1 << pid, {-95341040, players.user(), 20, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, int})
        util.trigger_script_event(1 << pid, {1742713914, players.user(), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
    end)

    local games = menu.list(griefing, "Force To Arcade Game")
    local arcade_games = {
        [210] = "Race And Chase",
        [211] = "Gunslinger",
        [212] = "Wizards Ruin",
        [216] = "Go Go Space Monkey",
    }

    for id, name in arcade_games do
        menu.action(games, name, {}, "Forces the player to play an arcade game.", function()
            if StandUser(pid) then util.toast(stand_notif) return end
            local int = memory.read_int(memory.script_global(1894573 + 1 + (pid * 608) + 510))
            util.trigger_script_event(1 << pid, {-95341040, players.user(), id, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, int})
            util.trigger_script_event(1 << pid, {1742713914, players.user(), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
        end)
    end

    local jobs = menu.list(griefing, "Force To Activity")
    local activities = {
        [192] = "Send To Darts",
        [193] = "Send To Golf",
    }

    for id, name in activities do
        menu.action(jobs, name, {}, "Forces the player into an activity.", function()
            if StandUser(pid) then util.toast(stand_notif) return end
            local int = memory.read_int(memory.script_global(1894573 + 1 + (pid * 608) + 510))
            util.trigger_script_event(1 << pid, {-95341040, players.user(), id, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, int})
            util.trigger_script_event(1 << pid, {1742713914, players.user(), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
        end)
    end

    menu.action(griefing, "Force 1v1", {"1v1"}, "Forces them into a 1v1.", function()
        if StandUser(pid) then util.toast(stand_notif) return end
        local int = memory.read_int(memory.script_global(1894573 + 1 + (pid * 608) + 510))
        util.trigger_script_event(1 << pid, {-95341040, players.user(), 197, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, int})
        util.trigger_script_event(1 << pid, {1742713914, players.user(), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
    end)

    menu.toggle_loop(griefing, "Lock Out Of Vehicles", {"vehiclelock"}, "", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_TRYING_TO_ENTER(ped)
        if not GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, pid) then
            SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, pid, true)
        end
    end)

    local disable_accel_notif = true
    menu.toggle_loop(griefing, "Disable Vehicle Acceleration", {}, "", function(toggled)
        if disable_accel_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                disable_accel_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        local top_speed = GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED(vehicle)
        
        if not IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
        return end
        GetControlOfEntity(vehicle)
        SET_VEHICLE_MAX_SPEED(vehicle, 0.1)
    end)

    local flip_notif = true
    menu.action(griefing, "Flip Vehicle Upside Down", {"flip"}, "", function()
        if flip_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                flip_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        local rot = GET_ENTITY_ROTATION(vehicle, 2)
        rot.x = 180

        if not IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
        return end
        GetControlOfEntity(vehicle)
        SET_ENTITY_ROTATION(vehicle, rot, 2, false)
    end)

    local spinbot_notif = true
    player_toggle_loop(griefing, pid, "Spinbot Vehicle", {"spin"}, "", function()
        if spinbot_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                spinbot_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        local height = GET_ENTITY_HEIGHT_ABOVE_GROUND(vehicle)

        if not IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
        return end
        GetControlOfEntity(vehicle)
        if height < 5.0 and height > 0.1 then
            SET_VEHICLE_ON_GROUND_PROPERLY(vehicle)
        end
        if vehicle != 0 and not IS_PED_DEAD_OR_DYING(ped) then
            APPLY_FORCE_TO_ENTITY(vehicle, 5, 0.0, 0.0, 500.0, 0, 0, 0, 0, true, false, true, false, true)
        end
    end)

    local sticky_notif = true
    player_toggle_loop(griefing, pid, "Sticky Tires", {"stickytires"}, "", function()
        if sticky_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                sticky_notif = false
            end
        end
        ADD_EXPLOSION(players.get_position(pid), 68, 10.0, false, true, 0.0, true)
        util.yield(1000)
    end)

    local hospitalize_count = 0
    local hospitalize_notif = true
    menu.action(griefing, "Hospitalize", {"hospitalize"}, "", function()
        if hospitalize_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290))
                hospitalize_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        SetBit(memory.script_global(2657589 + 1 + (players.user() * 466) + 427), 0)
        repeat 
            util.yield()
        until memory.read_int(memory.script_global(2657589 + 1 + (players.user() * 466) + 427), 0)
        menu.trigger_commands("kill" .. players.get_name(pid))
        if not IS_PED_DEAD_OR_DYING(ped) then
            repeat
                hospitalize_count += 1
                if hospitalize_count >= 300 then
                    util.toast("Failed to hospitalize player. :/")
                    ClearBit(memory.script_global(2657589 + 1 + (players.user() * 466) + 427), 0)
                    hospitalize_count = 0
                    return
                end
                util.yield()
            until IS_PED_DEAD_OR_DYING(ped)
        end
        if IS_PED_DEAD_OR_DYING(ped) then
            repeat
                util.yield()
            until not IS_PED_DEAD_OR_DYING(ped)
            ClearBit(memory.script_global(2657589 + 1 + (players.user() * 466) + 427), 0)
            hospitalize_count = 0
        end
    end)
 
    local attack
    attack = player_toggle_loop(griefing, pid, "Angry Peds", {}, "Makes nearby peds hate the player and begin revolting against them.", function()
        local target = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        for players.list_except() as id do
            local ped = GET_PLAYER_PED_SCRIPT_INDEX(id)
            for entities.get_all_peds_as_handles() as npc do
                if npc != ped and npc != players.user_ped() then
                    TASK_COMBAT_PED(npc, target, 67108864, 16)
                    if not IS_PED_ARMED(npc, 7) and not IS_PED_A_PLAYER(npc) then
                        local weapon_type = attack_weapons[math.random(#attack_weapons)]
                        GIVE_WEAPON_TO_PED(npc, weapon_type, 9999, false, true)
                        SET_PED_ACCURACY(npc, 100)
                    end
                    util.yield()
                end
            end
        end
    end)

    menu.action(griefing,  "Hamburger", {"hamburger"}, "Whopper, Whopper, Whopper, Whopper!", function()
        local pos = players.get_position(pid)
        pos.z -= 0.50
        local whopper = util.joaat("xs_prop_hamburgher_wl")
        RequestModel(whopper)
        local hamburger = entities.create_object(whopper, pos)
        entities.set_can_migrate(hamburger, false)
        util.yield(60000)
        entities.delete(hamburger)
    end)
    
    menu.toggle(griefing,  "Patty Wagon", {"pattywagon"}, "", function(toggled)
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        pos.z -= 0.50
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        local whopper = util.joaat("xs_prop_hamburgher_wl")
        RequestModel(whopper)
        if toggled then
            if IS_PED_IN_ANY_VEHICLE(ped, false) then
                hamburger = entities.create_object(whopper, pos)
                SET_ENTITY_COLLISION(hamburger, false, true)
                entities.set_can_migrate(hamburger, false)
                ATTACH_ENTITY_TO_ENTITY(hamburger, vehicle, 0, 0, 0, -0.50, 0, 0, 0, false, false, true, false, 0, false, 0)
            end
        else
            entities.delete(hamburger)
        end
    end)

    menu.action(griefing, "Glitch Interior State", {}, "Can be undone by rejoining. Player must be in an apartment. Works on most menus.", function()
        if StandUser(pid) then util.toast(stand_notif) return end
        if players.is_in_interior(pid) then
            util.trigger_script_event(1 << pid, {629813291, players.user(), pid, pid, pid, math.random(-2147483647, 2147483647), pid})
        else
            util.toast(players.get_name(pid) .. " isn't in an interior. :/")
        end
    end)

    menu.action(griefing,  "Force Player Out Of Interior", {}, "Works for most interiors.", function() -- very innovative!
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local glitch_hash = util.joaat("prop_windmill_01")
        local mdl = util.joaat("brickade2")
        RequestModel(glitch_hash)
        RequestModel(mdl)
        for interior_stuff as id do
            if GET_INTERIOR_FROM_PLAYER(pid) == id then
                util.toast(players.get_name(pid) .. " isn't in an interior. :/")
            return end
        end
        for i = 0, 3 do
            local obj = entities.create_object(glitch_hash, pos)
            local veh = entities.create_vehicle(mdl, pos, 0)
            SET_ENTITY_VISIBLE(obj, false)
            SET_ENTITY_VISIBLE(veh, false)
            SET_ENTITY_INVINCIBLE(veh, true)
            SET_ENTITY_COLLISION(obj, true, true)
            APPLY_FORCE_TO_ENTITY(veh, 1, 0.0, 10.0, 10.0, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
            util.yield(250)
            entities.delete(obj)
            entities.delete(veh)
            util.yield(250)     
        end
    end)
    
    local freeze = menu.list(griefing, "Freeze Player", {}, "")
    local hard_freeze
    hard_freeze = player_toggle_loop(freeze, pid, "Hard Freeze", {"hardfreeze"}, "Freezes them along with their camera. Blocked by most menus.", function()
        if StandUser(pid) then
            util.toast(stand_notif)
            hard_freeze.value = false
            util.stop_thread()
        end
        util.trigger_script_event(1 << pid, {330622597, players.user(), 0, 0, 0, 0, 0})
        util.yield(500)
    end)

    local blinking_freeze
    blinking_freeze = player_toggle_loop(freeze, pid, "Blinking Freeze", {"blinkingfreeze"}, "Acts like hard freeze but blinks occasionally. Blocked by most menus.", function()
        if StandUser(pid) then
            util.toast(stand_notif)
            blinking.freeze = false
            util.stop_thread()
        end
        util.trigger_script_event(1 << pid, {-1796714618, players.user(), 0, 1, 0, 0})
        util.yield(500)
    end)

    local clear_ped_tasks
    clear_ped_tasks = player_toggle_loop(freeze, pid, "Clear Ped Tasks", {}, "Basic freeze method. Blocked by most menus.", function()
        if StandUser(pid) then
            util.toast(stand_notif)
            clear_ped_tasks.value = false
            util.stop_thread()
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        CLEAR_PED_TASKS_IMMEDIATELY(ped)
    end)
    
    menu.action(freeze, "Teleport Freeze", {"tpfreeze"}, "Will freeze the player for ~20 seconds then teleport them to tennis.", function()
        if StandUser(pid) then util.toast(stand_notif) return end
        local int = memory.read_int(memory.script_global(1894573 + 1 + (pid * 608) + 510)) -- Global_1894573[PLAYER::PLAYER_ID() /*608*/].f_510
        util.trigger_script_event(1 << pid, {-95341040, players.user(), 195, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, int})
        util.trigger_script_event(1 << pid, {1742713914, players.user(), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
    end)

    local inf_loading = menu.list(griefing, "Infinite Loading Screen", {}, "")
    menu.action(inf_loading, "MC Teleport Method", {}, lang.get_localised(-748077967), function()
        if StandUser(pid) then util.toast(stand_notif) return end
        util.trigger_script_event(1 << pid, {891653640, players.user(), 0, 32, NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
    end)

    menu.action(inf_loading, "Apartment Method", {}, lang.get_localised(-748077967), function()
        if StandUser(pid) then util.toast(stand_notif) return end
        util.trigger_script_event(1 << pid, {-1796714618, players.user(), 0, 1, id})
    end)
        
    menu.list_action(inf_loading, "Bad Phone Invite", {}, "", invites, function(index, name)
        if StandUser(pid) then util.toast(stand_notif) return end
        switch name do
            case "Yacht":
                util.trigger_script_event(1 << pid, {36077543, players.user(), 1})
                util.toast("Yacht Invite Sent")
            break
            case "Office":
                util.trigger_script_event(1 << pid, {36077543, players.user(), 2})
                util.toast("Office Invite Sent")
            break
            case "Clubhouse":
                util.trigger_script_event(1 << pid, {36077543, players.user(), 3})
                util.toast("Clubhouse Invite Sent")
            break
            case "Office Garage":
                util.trigger_script_event(1 << pid, {36077543, players.user(), 4})
                util.toast("Office Garage Invite Sent")
            break
            case "Custom Auto Shop":
                util.trigger_script_event(1 << pid, {36077543, players.user(), 5})
                util.toast("Custom Auto Shop Invite Sent")
            break
            case "Apartment":
                util.trigger_script_event(1 << pid, {36077543, players.user(), 6})
                util.toast("Apartment Invite Sent")
            break
        end
    end)

    local blackscreen
    blackscreen = player_toggle_loop(griefing, pid, "Black Screen", {"blackscreen"}, lang.get_localised(-748077967), function()
        if StandUser(pid) then
            util.toast(stand_notif)
            blackscreen.value = false
            util.stop_thread()
        end
        util.trigger_script_event(1 << pid, {891653640, players.user(), math.random(1, 32), 32, NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
        util.yield(1000)
    end)

    local cage = menu.list(griefing, "Cage Player", {}, "")
    menu.action(cage, "Electric Cage", {"electriccage"}, "", function()
        if StandUser(pid) then util.toast(stand_notif) return end
        local number_of_cages = 6
        local elec_box = util.joaat("prop_elecbox_12")
        local pos = players.get_position(pid)
        pos.z -= 0.5
        RequestModel(elec_box)
        local temp_v3 = v3.new(0, 0, 0)
        for i = 1, number_of_cages do
            local angle = (i / number_of_cages) * 360
            temp_v3.z = angle
            local obj_pos = temp_v3:toDir()
            obj_pos:mul(2.5)
            obj_pos:add(pos)
            for offs_z = 1, 5 do
                local electric_cage = entities.create_object(elec_box, obj_pos)
                spawned_objects[#spawned_objects + 1] = electric_cage
                SET_ENTITY_ROTATION(electric_cage, 90.0, 0.0, angle, 2, 0)
                obj_pos.z += 0.75
                FREEZE_ENTITY_POSITION(electric_cage, true)
            end
        end
    end)

    menu.action(cage, "Shipping Container", {"containercage"}, "", function()
        if StandUser(pid) then util.toast(stand_notif) return end
        local container_hash = util.joaat("prop_container_ld_pu")
        local pos = players.get_position(pid)
        RequestModel(container_hash)
        pos.z -= 1
        local container = entities.create_object(container_hash, pos, 0)
        spawned_objects[#spawned_objects + 1] = container
        FREEZE_ENTITY_POSITION(container, true)
    end)

    menu.action(cage, "Vehicle Cage", {"vehiclecage"}, "", function()
        if StandUser(pid) then util.toast(stand_notif) return end
        local container_hash = util.joaat("boxville3")
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        RequestModel(container_hash)
        local container = entities.create_vehicle(container_hash, GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 2.0, 0.0), GET_ENTITY_HEADING(ped))
        spawned_objects[#spawned_objects + 1] = container
        SET_ENTITY_VISIBLE(container, false)
        FREEZE_ENTITY_POSITION(container, true)
    end)

    menu.action(cage, "Delete Spawned Cages", {"clearcages"}, "", function()
        local entitycount = 0
        for spawned_objects as object do
            SET_ENTITY_AS_MISSION_ENTITY(object, false, false)
            NETWORK_REQUEST_CONTROL_OF_ENTITY(object)
            entities.delete(object)
            spawned_objects[i] = nil
            entitycount += 1
        end
        util.toast("Cleared " .. entitycount .. " Spawned Cage Objects")
    end) 

    local radio = menu.list(griefing, "Change Radio Station", {}, "")
    local stations = {}
    for station, name in station_name do
        stations[#stations + 1] = station
    end
    local radio_notif = true
    menu.list_action(radio, "Radio Station", {}, "", stations, function(index, value)
        if radio_notif == true then
            if StandUser(pid) then
                util.toast(lang.get_localised(1729001290)) 
                radio_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(players.user())
        local vehicle = GET_VEHICLE_PED_IS_IN(ped)

        if not IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
        return end

        local radio_name = station_name[value]
        if IS_PED_IN_ANY_VEHICLE(ped, false) then 

            if not ARE_ANY_VEHICLE_SEATS_FREE(vehicle) then
                util.toast("Failed to change players radio. :/")
            return end

            NETWORK_REQUEST_CONTROL_OF_ENTITY(vehicle)
            if not IS_PED_IN_VEHICLE(players.user_ped(), vehicle, false) then
                SET_ENTITY_VISIBLE(players.user_ped(), false)
                menu.trigger_commands("tpveh" .. players.get_name(pid))
                util.yield(250)
                SET_VEH_RADIO_STATION(vehicle, radio_name)
                util.yield(750)
                SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), pos, false, false, false)
            else
                util.yield(250)
                SET_VEH_RADIO_STATION(vehicle, radio_name)
            end
        end
    end)
    

    local control_veh
    local control_veh_notif = true
    control_veh = player_toggle_loop(griefing, pid, "Control Players Vehicle", {}, "Player must be in a normal vehicle for this to work.", function(toggle)
        if control_veh_notif == true then
            if StandUser(pid) then 
                util.toast(lang.get_localised(1729001290)) 
                control_veh_notif = false
            end
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local vehicle = GET_VEHICLE_PED_IS_IN(ped)
        local veh_class = GET_VEHICLE_CLASS(vehicle)
        if not players.exists(pid) then util.stop_thread() end

        if not DOES_ENTITY_EXIST(ped) and IS_PED_IN_ANY_VEHICLE(ped, false) then
            util.toast(players.get_name(pid) .. "Is too far or isn't in any vehicle. :/")
            control_veh.value = false
        util.stop_thread() end

        if veh_class == 15 then
            util.toast(players.get_name(pid) .. " is in a helicopter. :/")
            control_veh.value = false
        util.stop_thread() end
        
        if veh_class == 16 then
            util.toast(players.get_name(pid) .. " is in an airplane. :/")
            control_veh.value = false
        util.stop_thread() end

        if IS_PED_IN_ANY_VEHICLE(ped, false) then
            FREEZE_ENTITY_POSITION(players.user_ped(), true)
            if IS_CONTROL_PRESSED(0, 34) then
                while not IS_CONTROL_RELEASED(0, 34) do
                    TASK_VEHICLE_TEMP_ACTION(ped, GET_VEHICLE_PED_IS_IN(ped), 7, 100)
                    util.yield()
                end
            elseif IS_CONTROL_PRESSED(0, 35) then
                while not IS_CONTROL_RELEASED(0, 35) do
                    TASK_VEHICLE_TEMP_ACTION(ped, GET_VEHICLE_PED_IS_IN(ped), 8, 100)
                    util.yield()
                end
            elseif IS_CONTROL_PRESSED(0, 32) then
                while not IS_CONTROL_RELEASED(0, 32) do
                    TASK_VEHICLE_TEMP_ACTION(ped, GET_VEHICLE_PED_IS_IN(ped), 23, 100)
                    util.yield()
                end
            elseif IS_CONTROL_PRESSED(0, 33) then
                while not IS_CONTROL_RELEASED(0, 33) do
                    TASK_VEHICLE_TEMP_ACTION(ped, GET_VEHICLE_PED_IS_IN(ped), 28, 100)
                    util.yield()
                end
            end
        else
            util.toast(lang.get_localised(1067523721):gsub("{}", players.get_name(pid)))
            control_veh.value = false
        end
        util.yield()
    end, function()
        FREEZE_ENTITY_POSITION(players.user_ped(), false)
    end)

    local jesus_tgl = false
    local jesus_ped
    menu.toggle(griefing, "Griefer Jesus", {""}, "", function(toggled)
        if toggled then
            local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
            local pos = players.get_position(pid)
            local jesus = util.joaat("u_m_m_jesus_01")
            RequestModel(jesus)
    
            jesus_ped = entities.create_ped(26, jesus, pos, 0)
            SET_ENTITY_INVINCIBLE(jesus_ped, true)
            GIVE_WEAPON_TO_PED(jesus_ped, util.joaat("WEAPON_RAILGUN"), 9999, true, true)
            SET_PED_HEARING_RANGE(jesus_ped, 9999.0)
            SET_PED_CONFIG_FLAG(jesus_ped, 281, true)
            SET_PED_COMBAT_ATTRIBUTES(jesus_ped, 5, true)
            SET_PED_COMBAT_ATTRIBUTES(jesus_ped, 46, true)
            SET_PED_ACCURACY(jesus_ped, 100.0)
            SET_PED_COMBAT_ABILITY(jesus_ped, 2)
            SET_PED_CAN_RAGDOLL(jesus_ped, false)
            TASK_COMBAT_PED(jesus_ped, ped, 0, 16)
            
            while toggled do
                if IS_PED_DEAD_OR_DYING(ped) then
                    repeat
                        util.yield()
                    until not IS_PED_DEAD_OR_DYING(ped)
                    local new_pos = players.get_position(pid)
                    new_pos.y += 2
                    new_pos.z += 1 -- jesus kept sliding for some reason, doing this to prevent that.
                    util.yield(2500)
                    SET_ENTITY_COORDS_NO_OFFSET(jesus_ped, new_pos, false, false, false)
                    REFILL_AMMO_INSTANTLY(jesus_ped)
                    TASK_COMBAT_PED(jesus_ped, ped, 0, 16)
                end
                util.yield()
            end
        end
        if jesus_ped != nil then
            entities.delete(jesus_ped)
        end
    end)

    local antigodmode = menu.list(bozo, "Anti-Godmode", {}, "")
    local stun = menu.list(antigodmode, "Stun", {}, "Works on menus that use entity proofs for godmode and works well on godmode glitchers.")
    menu.action(stun, "Owned", {"ownedstun"}, "", function()
        local pos = players.get_position(pid)
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 1, pos.x, pos.y, pos.z, 1000, true, util.joaat("weapon_stungun"), players.user_ped(), false, true, 1.0)
    end)

    menu.action(stun, "Anonymous", {"anonstun"}, "", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        SHOOT_SINGLE_BULLET_BETWEEN_COORDS(pos.x, pos.y, pos.z + 1, pos.x, pos.y, pos.z, 1000, true, util.joaat("weapon_stungun"), false, false, true, 1.0)
    end)
    
    menu.action(antigodmode, "Squish Godmode Player", {"squish"}, "Will squish the player and remove their godmode causing them to die. Works on some popular menus but mainly bad menus. (Note: Will not work if the target is using no ragdoll).", function()
        if StandUser(pid) then util.toast(stand_notif) return end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)
        local heading =  GET_ENTITY_HEADING(ped)
        local khanjali = util.joaat("khanjali")
        RequestModel(khanjali)
        distance = 2.5
        if IS_PED_STILL(ped) then
            distance = 0.0
        end

        local vehicle1 = entities.create_vehicle(khanjali, GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, distance, 2.8), heading)
        local vehicle2 = entities.create_vehicle(khanjali, pos, 0)
        local vehicle3 = entities.create_vehicle(khanjali, pos, 0)
        local vehicle4 = entities.create_vehicle(khanjali, pos, 0)
        local spawned_vehs = {vehicle1, vehicle2, vehicle3, vehicle4}
        for spawned_vehs as vehicle do
            entities.set_can_migrate(vehicle, false)
        end
        ATTACH_ENTITY_TO_ENTITY(vehicle2, vehicle1, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, -180.0, 0, false, true, false, 0, true)
        ATTACH_ENTITY_TO_ENTITY(vehicle3, vehicle1, 0.0, 3.0, 3.0, 0.0, 0.0, 0.0, -180.0, 0, false, true, false, 0, true)
        ATTACH_ENTITY_TO_ENTITY(vehicle4, vehicle1, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, false, true, false, 0, true)
        SET_ENTITY_VISIBLE(vehicle1, false)
        util.yield(5000)
        for spawned_vehs as vehicle do
            entities.delete(vehicle)
        end
    end) 
    menu.action(antigodmode, "Death Barrier Kill", {"barrierkill"}, "Note: Will only work if the target is not using disable death barriers. May also be inconsistent on higher ping players.", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)                            
        local hash = util.joaat("prop_windmill_01")
        local mdl = util.joaat("rallytruck")
        RequestModel(hash)
        RequestModel(mdl)
        for i = 0, 5 do
            if IS_PED_WALKING(ped) then
                spawn_pos = GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 0.5, 0.0)
            elseif not IS_PED_WALKING(ped) then
                spawn_pos = GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(ped, 0.0, 1.3, 0.0)
            else
                spawn_pos = players.get_position(pid)
            end
            local obj = entities.create_object(hash, spawn_pos)
            SET_ENTITY_VISIBLE(obj, false)
            SET_ENTITY_INVINCIBLE(obj, true)
            SET_ENTITY_COLLISION(obj, true, true)
            util.yield(150)
            entities.delete(obj)
        end
    end)
    local remove_gm
    remove_gm = player_toggle_loop(antigodmode, pid, "Remove Player Godmode", {}, lang.get_localised(-748077967), function()
        if StandUser(pid) then
            util.toast(stand_notif)
            remove_gm.value = false
            util.stop_thread()
        end
        util.trigger_script_event(1 << pid, {-1428749433, players.user(), 448051697, math.random(0, 9999)})
    end)

    local remove_veh_gm
    remove_veh_gm = player_toggle_loop(antigodmode, pid, "Remove Vehicle Godmode", {}, lang.get_localised(-748077967), function()
        if StandUser(pid) then
            util.toast(stand_notif)
            remove_veh_gm.value = false
            util.stop_thread()
        end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local veh = GET_VEHICLE_PED_IS_IN(ped, false)
        GetControlOfEntity(veh)
        if IS_PED_IN_ANY_VEHICLE(ped, false) and not IS_PED_DEAD_OR_DYING(ped) then
            SET_ENTITY_CAN_BE_DAMAGED(veh, true)
            SET_ENTITY_INVINCIBLE(veh, false)
            SET_ENTITY_PROOFS(veh, false, false, false, false, false, 0, 0, false)
        end
    end)

    local tp_player = menu.list(bozo, "Teleport Player")
    local clubhouse = menu.list(tp_player, "Clubhouse")
    local facility = menu.list(tp_player, "Facility")
    local arcade = menu.list(tp_player, "Arcade")
    local warehouse = menu.list(tp_player, "Warehouse")
    local cayoperico = menu.list(tp_player, "Cayo Perico")
    local interiors = menu.list(tp_player, "Interiors") -- thx to aaron for sending me the labels and their numbers for most of the interiors <3

    for id, name in All_business_properties do
        if id <= 12 then
            menu.action(clubhouse, name, {}, "", function()
                if StandUser(pid) then util.toast(stand_notif) return end
                util.trigger_script_event(1 << pid, {891653640, players.user(), id, 32, NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, math.random(1, 10)})
            end)
        elseif id > 12 and id <= 21 then
            menu.action(facility, name, {}, "", function()
                if StandUser(pid) then util.toast(stand_notif) return end
                util.trigger_script_event(1 << pid, {891653640, players.user(), id, 32, NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
            end)
        elseif id > 21 then
            menu.action(arcade, name, {}, "", function() 
                if StandUser(pid) then util.toast(stand_notif) return end
                util.trigger_script_event(1 << pid, {891653640, players.user(), id, 32, NETWORK_HASH_FROM_PLAYER_HANDLE(pid), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1})
            end)
        end
    end

    local small = menu.list(warehouse, "Small Warehouse")
    local medium = menu.list(warehouse, "Medium Warehouse")
    local large = menu.list(warehouse, "Large Warehouse")

    for id, name in small_warehouses do
        menu.action(small, name, {}, "", function()
            if StandUser(pid) then util.toast(stand_notif) return end
            util.trigger_script_event(1 << pid, {-1796714618, players.user(), 0, 1, id})
        end)
    end

    for id, name in medium_warehouses do
        menu.action(medium, name, {}, "", function()
            if StandUser(pid) then util.toast(stand_notif) return end
            util.trigger_script_event(1 << pid, {-1796714618, players.user(), 0, 1, id})
        end)
    end

    for id, name in large_warehouses do
        menu.action(large, name, {}, "", function()
            if StandUser(pid) then util.toast(stand_notif) return end
            util.trigger_script_event(1 << pid, {-1796714618, players.user(), 0, 1, id})
        end)
    end

    menu.action(cayoperico, "Cayo Perico", {"tpcayo"}, lang.get_localised(-748077967), function()
        if StandUser(pid) then util.toast(stand_notif) util.stop_thread() end
        util.trigger_script_event(1 << pid, {330622597, players.user(), 0, 0, 3, 1})
    end)

    menu.action(cayoperico, "Cayo Perico v2", {"tpcayo2"}, lang.get_localised(-748077967), function()
        if StandUser(pid) then util.toast(stand_notif) util.stop_thread() end
        util.trigger_script_event(1 << pid, {-369672308, players.user(), 1})
    end)

    menu.action(cayoperico, "Cayo Perico (No Cutscene)", {"tpcayo2"}, lang.get_localised(-748077967), function()
        if StandUser(pid) then util.toast(stand_notif) util.stop_thread() end
        util.trigger_script_event(1 << pid, {330622597, players.user(), 0, 0, 4, 1})
    end)

    menu.action(cayoperico, "Leaving Cayo Perico", {"cayoleave"}, "Blocked by most menus. Player must be at cayo perico to trigger this.", function()
        if StandUser(pid) then util.toast(stand_notif) util.stop_thread() end
        util.trigger_script_event(1 << pid, {330622597, players.user(), 0, 0, 3})
    end)

    menu.action(cayoperico, "Kicked From Cayo Perico", {"cayokick"}, lang.get_localised(-748077967), function()
        if StandUser(pid) then util.toast(stand_notif) util.stop_thread() end
        util.trigger_script_event(1 << pid, {330622597, players.user(), 0, 0, 4, 0})
    end)

    local interior_tps = {
        [70] = "Bunker", -- 70 thru 80 are bunkers
        [81] = "Mobile Operations Center",
        [83] = "Hangar", -- 83 thru 87 are hangars
        [88] = "Avenger",
        [89] = "Facility", -- 89 thru 97 are facilities
        [102] = "Nightclub Garage",-- 102 thru 111 are garages
        [117] = "Terrorbyte",
        [122] = "Arena Workshop",
        [123] = "Casino",
        [124] = "Penthouse",
        [128] = "Arcade Garage", -- 128 thru 133 are garages
        [146] = "Nightclub",
        [147] = "Kosatka",
        [149] = "Auto Shop", -- 149 thru 153 are auto shops
        [155] = "Agency Office",
    }
  
    for id, name in interior_tps do
        menu.action(interiors, name, {""}, lang.get_localised(-748077967), function()
            if StandUser(pid) then util.toast(stand_notif) return end
            util.trigger_script_event(1 << pid, {1727896103, players.user(), id, 1, 0, 1, 1130429716, -1001012850, 1106067788, 0, 0, 1, 2123789977, 1, -1})
        end)
    end

    local spectate_root = menu.ref_by_rel_path(menu.player_root(pid), "Spectate")
    local spectate = menu.list(spectate_root, "Spectate Settings")
    if menu.get_edition() > 1 then
        local esp_tgl
        esp_tgl = menu.toggle(spectate, "Enable ESP", {""}, "", function(toggled)
            if toggled then
                menu.trigger_command(menu.ref_by_path("World>Inhabitants>Player ESP>Bone ESP>Low Latency Rendering"))
                menu.trigger_command(menu.ref_by_path("World>Inhabitants>Player ESP>Name ESP>Name ESP>Low Latency Rendering"))
                menu.trigger_commands("esptags off")
            else
                menu.trigger_command(menu.ref_by_path("World>Inhabitants>Player ESP>Bone ESP>Disabled"))
                menu.trigger_command(menu.ref_by_path("World>Inhabitants>Player ESP>Name ESP>Name ESP>Disabled"))
            end
        end)
    end

    player_toggle_loop(spectate, pid, "Clear Timecycle Modifier", {}, "Will automatically set the timecycle modifier to default when spectating people from an interior so spectating people from places like a facility won't look bad.", function()
        if GET_TIMECYCLE_MODIFIER_INDEX() != -1 or GET_INTERIOR_FROM_PLAYER(players.user()) != 0 then
            SET_TIMECYCLE_MODIFIER("DEFAULT")
        end
    end)

    local misc = menu.list(bozo, "Miscellaneous")
    player_toggle_loop(misc, pid, "Show Aim Lines", {"aimlines"}, "", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local weapon_ent = GET_CURRENT_PED_WEAPON_ENTITY_INDEX(ped, false)
        local weapon_coords = GET_ENTITY_BONE_POSTION(weapon_ent, GET_ENTITY_BONE_INDEX_BY_NAME(weapon_ent, "gun_muzzle"))
        local inst = v3.new()
        v3.set(inst, players.get_cam_rot(pid))
        local tmp = v3.toDir(inst)
        v3.set(inst, v3.get(tmp))
        v3.mul(inst, 1000)
        v3.set(tmp, players.get_cam_pos(pid))
        v3.add(inst, tmp)
        if IS_PLAYER_FREE_AIMING(pid) then
            DRAW_LINE(weapon_coords, inst, 255, 255, 255, 255)
        end
    end)

    local aimbor
    aimbor = player_toggle_loop(misc, pid, "Unfair Triggerbot", {"triggerbot"}, "", function()
        if pid == players.user() then 
            util.toast(lang.get_localised(-1974706693)) 
            aimbor.value = false
        util.stop_thread() end
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local wpn = GET_SELECTED_PED_WEAPON(players.user_ped())
        local dmg = ROUND(GET_WEAPON_DAMAGE(wpn, 0))
        local delay = GET_WEAPON_TIME_BETWEEN_SHOTS(wpn)
        local wpnEnt = GET_CURRENT_PED_WEAPON_ENTITY_INDEX(PLAYER_PED_ID(), false)
        local wpnCoords = GET_ENTITY_BONE_POSTION(wpnEnt, GET_ENTITY_BONE_INDEX_BY_NAME(wpnEnt, "gun_muzzle"))
        if GET_ENTITY_ALPHA(ped) < 255 then return end
        if IS_PLAYER_FREE_AIMING_AT_ENTITY(players.user(), ped) and not IS_PED_RELOADING(players.user_ped()) then
            boneIndex = bones[math.random(#bones)]
            local pos = GET_PED_BONE_COORDS(ped, boneIndex, 0.0, 0.0, 0.0)
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS(wpnCoords, pos, dmg, true, wpn, players.user_ped(), true, false)
            SET_CONTROL_VALUE_NEXT_FRAME(0, 24, 1.0) -- shooting manually after so it has the effect of you shooting to seem more legit despite there being nothing legit about this
            util.yield(delay * 1000)
        end
    end)

    player_toggle_loop(misc, pid, "Vehicle Rocket Aimbot", {"vehicleaimbot"}, "allows you to aimbot players using the weapons on your ", function()
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if not IS_PED_DEAD_OR_DYING(ped) and IS_CONTROL_PRESSED(0, 70) then
            SET_VEHICLE_SHOOT_AT_TARGET(players.user_ped(), ped, players.get_position(pid))
        end
    end)

    player_toggle_loop(misc, pid, "Thin Ice", {"thinice"}, "As the name suggest, the player will be on thin ice. Any attacks towards you will result in them being auto kicked.", function()
        if players.is_marked_as_attacker(pid) then
            menu.trigger_commands("kick" .. players.get_name(pid))
        end
    end)
end

players.on_join(player)
players.dispatch_on_join()

local interior_noclip = menu.list(self, "Interior Levitation Speed")
local noclip_speed = 1.00
menu.slider_float(interior_noclip, "Movement Speed", {"noclipspeed"}, "", 10, 10000, 100, 10, function(value)
    noclip_speed = value / 100
end)

local levitate_multiplier = 1.00
menu.slider_float(interior_noclip, "Levitate Multiplier", {"noclipspeed"}, "", 10, 10000, 100, 10, function(value)
    levitate_multiplier = value / 100
end)

local noclip_thing
noclip_thing = menu.toggle_loop(interior_noclip, "Enable", {"interiornoclip"}, "", function()
    local speed_val = menu.ref_by_path("Self>Movement>Levitation>Movement Speed")
    local sprint_val = menu.ref_by_path("Self>Movement>Levitation>Sprint Multiplier")
    if GET_INTERIOR_FROM_PLAYER(players.user()) != 0 then
        menu.trigger_commands("levitatespeed " .. noclip_speed)
        menu.trigger_commands("levitatesprintmultiplier " .. levitate_multiplier)
    else
        if speed_val != speed then
            menu.trigger_commands("levitatespeed " .. speed / 100)
        end
        if sprint_val != sprint then
            menu.trigger_commands("levitatesprintmultiplier " .. sprint / 100)
        end
    end
end, function()
    menu.trigger_commands("levitatespeed " .. speed / 100)
    menu.trigger_commands("levitatesprintmultiplier " .. sprint / 100)
end)


block_blaming = menu.ref_by_path("Online>Protections>Block Blaming")
menu.toggle_loop(self, "Fast Respawn", {"fastrespawn"}, "", function()
    local gwobaw = memory.script_global(2672505 + 1685 + 756) -- Global_2672505.f_1685.f_756
    if IS_PED_DEAD_OR_DYING(players.user_ped()) then
        ANIMPOSTFX_STOP_ALL()
        memory.write_int(gwobaw, memory.read_int(gwobaw) | 1 << 1)
    end
end,
    function()
    local gwobaw = memory.script_global(2672505 + 1685 + 756)
    memory.write_int(gwobaw, memory.read_int(gwobaw) &~ (1 << 1)) 
end)

menu.toggle_loop(self, "Fast Roll", {"fastroll"}, "", function()
    STAT_SET_INT(util.joaat("MP"..util.get_char_slot().."_SHOOTING_ABILITY"), 200, true)
end)

menu.toggle_loop(self, "Friendly AI", {"friendlyai"}, "AIs won't target you.", function()
    SET_PED_RESET_FLAG(players.user_ped(), 124, true)
end)

menu.toggle_loop(self, "Auto Accept", {"autoaccept"}, "Auto accepts join screens.", function() -- credits to soulreaper for sending me this :D
    local message_hash = GET_WARNING_SCREEN_MESSAGE_HASH()
    if message_hash == 15890625 or message_hash == -587688989 then
        SET_CONTROL_VALUE_NEXT_FRAME(2, 201, 1.0)
        util.yield(50)
    end
end)

menu.toggle(online, "Create Ghost Session", {"ghostsession"}, "Creates a session within your session where you will not recieve other players syncs, and they will not recieve yours. (Note: some stand features may not work when using this.)", function(toggled)
    if toggled then
        NETWORK_START_SOLO_TUTORIAL_SESSION()
    else
        NETWORK_END_TUTORIAL_SESSION()
    end
end)

menu.toggle_loop(online, "Auto Claim Bounties", {"autoclaimbounties"}, "Automatically claims bounties that are placed on you.", function()
    local bounty = players.get_bounty(players.user())
    if bounty != nil then
        repeat
            menu.trigger_commands("removebounty")
            util.yield(1000)
            bounty = players.get_bounty(players.user())
        until bounty == nil
        util.toast("Bounty has been auto-claimed. :D")
    end
end)


local block_orb
block_orb = menu.toggle_loop(online,  "Block Orbital Cannon", {"blockorb"}, "", function() -- credit to lance, just cleaned it up a bit.
    local mdl = util.joaat("h4_prop_h4_garage_door_01a")
    RequestModel(mdl)
    if orb_obj == nil or not DOES_ENTITY_EXIST(orb_obj) then
        orb_obj = entities.create_object(mdl, v3(335.9, 4833.9, -59.0))
        entities.set_can_migrate(orb_obj, false)
        SET_ENTITY_HEADING(orb_obj, 125.0)
        FREEZE_ENTITY_POSITION(orb_obj, true)
        SET_ENTITY_NO_COLLISION_ENTITY(orb_obj, players.user_ped(), false)
        SET_ENTITY_NO_COLLISION_ENTITY(players.user_ped(), orb_obj, false) -- have to do this both way for collision to be properly avoided between player ped and the object
    end
    util.yield(50)
end, function()
    if orb_obj != nil then
        entities.delete(orb_obj)
    end
end)

local orb = menu.list(online, "Anti-Orbital Cannon")
local ghost = menu.list(orb, "Ghost")
local ghost_tgl
ghost_tgl = menu.toggle_loop(ghost, "Always", {"ghostorb"}, "Automatically ghost players that are using the orbital cannon", function()
    for players.list_except() as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local cam_dist = v3.distance(players.get_position(players.user()), players.get_cam_pos(pid))
        if IS_PLAYER_USING_ORBITAL_CANNON(pid) and GET_IS_TASK_ACTIVE(ped, 135) and cam_dist < 400 and cam_dist > 340 then
            util.toast(players.get_name(pid) .. " Is targeting you with the orbital cannon")
        end
        if IS_PLAYER_USING_ORBITAL_CANNON(pid) then
            SET_REMOTE_PLAYER_AS_GHOST(pid, true)
            repeat
                util.yield()
            until not IS_PLAYER_USING_ORBITAL_CANNON(pid)
            SET_REMOTE_PLAYER_AS_GHOST(pid, false)
        end
    end
end, function()
    for players.list_except(true) as pid do
        SET_REMOTE_PLAYER_AS_GHOST(pid, false)
    end
end)

local tgl
tgl = menu.toggle_loop(ghost, "While Being Targeted", {}, "Automatically ghost players that are targetting you with the orbital cannon.", function()
    if menu.get_value(ghost_tgl) then
        tgl.value = false
    return end
    for players.list_except() as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local cam_dist = v3.distance(players.get_position(players.user()), players.get_cam_pos(pid))
        if IS_PLAYER_USING_ORBITAL_CANNON(pid) and GET_IS_TASK_ACTIVE(ped, 135) and cam_dist < 400 and cam_dist > 340 then
            util.toast(players.get_name(pid) .. " Is targeting you with the orbital cannon")
            SET_REMOTE_PLAYER_AS_GHOST(pid, true)
        else
            SET_REMOTE_PLAYER_AS_GHOST(pid, false)
        end
    end
end, function()
    for players.list_except(true) as pid do
        SET_REMOTE_PLAYER_AS_GHOST(pid, false)
    end
end)


local annoy = menu.list(orb, "Annoy", {}, "Rapidly shows and removes your name from the targetable players list.")
local orb_delay = 1000
menu.list_select(annoy, "Delay", {}, "The speed in which your name will flicker at for orbital cannon users.", {"Slow", "Medium", "Fast"}, 1, function(index, value)
switch value do
    case "Slow":
        orb_delay = 1000
        break
    case "Medium":
        orb_delay = 500
        break
    case "Fast":
        orb_delay = 100
        break
    end
end)

local annoy_tgl
annoy_tgl = menu.toggle_loop(annoy, "Enable", {}, "", function()
    if menu.get_value(ghost_tgl) then
        annoy_tgl.value = false
        util.toast("Please don't enable Annoy and Ghost simultaneuosly. ;)")
    return end
    
    for players.list_except(true) as pid do
       if IS_PLAYER_USING_ORBITAL_CANNON(pid) then
            SET_REMOTE_PLAYER_AS_GHOST(pid, true)
            util.yield(orb_delay)
            SET_REMOTE_PLAYER_AS_GHOST(pid, false)
            util.yield(orb_delay)
        else
            SET_REMOTE_PLAYER_AS_GHOST(pid, false)
        end
    end
end, function()
    for players.list_except(true) as pid do
        SET_REMOTE_PLAYER_AS_GHOST(pid, false)
    end
end)


menu.toggle_loop(online, "Ghost Armed Players", {"ghostarmedplayers"}, "Ghost players that have an sort of weapon out.", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if IS_PED_ARMED(ped, 7) or GET_IS_TASK_ACTIVE(ped, 199) or GET_IS_TASK_ACTIVE(ped, 128) 
        or IS_PLAYER_USING_GUIDED_MISSILE(pid) or IN_PLAYER_IN_RC_TANK(pid) or IN_PLAYER_IN_RC_BANDITO(pid) or IS_PLAYER_FLYING_ANY_DRONE(pid) then
            SET_REMOTE_PLAYER_AS_GHOST(pid, true)
        else
            SET_REMOTE_PLAYER_AS_GHOST(pid, false)
        end
    end
end, function()
    for players.list_except(true) as pid do
        SET_REMOTE_PLAYER_AS_GHOST(pid, false)
    end
end)

local honk
honk = menu.toggle_loop(online, "Horny Cars", {"testfeature"}, "", function()
    for entities.get_all_vehicles_as_handles() as vehicle do
        if vehicle != GET_VEHICLE_PED_IS_IN(players.user_ped(), false) and DECOR_GET_INT(vehicle, "Player_Vehicle") == 0 and NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) then
            if not IS_VEHICLE_ALARM_ACTIVATED(vehicle) then
                SET_VEHICLE_ALARM(vehicle, true)
                START_VEHICLE_ALARM(vehicle)
                util.yield()
            end
        end
    end
end, function()
    for entities.get_all_vehicles_as_handles() as vehicle do
        if IS_VEHICLE_ALARM_ACTIVATED(vehicle) then
            SET_VEHICLE_ALARM(vehicle, false)
        end
    end
end)

menu.action(lobby, "Hijack All Vehicles", {"hijackall"}, "Spawns a ped to take them out of their vehicle and drive away.", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local pos = players.get_position(pid)

        if DOES_ENTITY_EXIST(ped) and IS_PED_IN_ANY_VEHICLE(ped, false) then
            menu.trigger_commands("hijack " .. players.get_name(pid))
        end
    end
end)

menu.toggle_loop(lobby, "Lock All Vehicles", {"lockall"}, "", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_TRYING_TO_ENTER(ped)
        if not GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, pid) then
            SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, pid, true)
        end
    end
end)


menu.toggle_loop(lobby, "Annoy Weaponized Vehicle Users", {"annoy"}, "", function()
    for _, pid in players.list_except(true, true) do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local veh = GET_VEHICLE_PED_IS_IN(ped, false)
        if GET_IS_TASK_ACTIVE(ped, 199) then
            SET_VEHICLE_HOMING_LOCKEDONTO_STATE(veh, 1)
        end
    end
end)

menu.action(lobby,  "Hamburger", {"hamburgerall"}, "Whopper, Whopper, Whopper, Whopper!", function()
    for players.list_except(true) as pid do
        menu.trigger_commands("hamburger" .. players.get_name(pid))
    end
end)

menu.action(lobby,  "Patty Wagon", {"pattywagonall"}, "Turns everyones vehicle into a patty wagon.", function()
    for players.list_except(true) as pid do
        menu.trigger_commands("pattywagon" .. players.get_name(pid))
    end
end)

local horny = menu.list(lobby, "Anti-Horny")
local horny_counter = 0
menu.toggle_loop(horny, "Punish", {}, "Will punish horny players that are trying to solicit a prostitute by killing them.", function()
    for players.list_except() as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        if memory.read_int(memory.script_global(2657589 + 1 + (pid * 466) + 431)) == 1 and IS_PED_IN_ANY_VEHICLE(ped, false) and not IS_VEHICLE_SEAT_FREE(vehicle, -2, false) and not IS_PED_A_PLAYER(GET_PED_IN_VEHICLE_SEAT(vehicle, -2)) then -- Global_2657589[PLAYER::PLAYER_ID() /*466*/].f_431
            repeat
                if horny_counter > 50 then
                    horny_counter = 0
                    return
                end
                menu.trigger_commands("kill" .. players.get_name(pid))
                util.yield()
                horny_counter += 1
            until IS_PED_DEAD_OR_DYING(ped)
            util.toast("Killed " .. players.get_name(pid) .. " for being too horny.")
            horny_counter = 0
        end
    end
end)

menu.toggle_loop(horny, "Humiliate", {}, "Will humiliate horny players that are trying to solicit a prostitute by making fun of them in chat.", function()
    for players.list_except() as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        if memory.read_int(memory.script_global(2657589 + 1 + (pid * 466) + 431)) == 1 and IS_PED_IN_ANY_VEHICLE(ped, false) and not IS_VEHICLE_SEAT_FREE(vehicle, -2, false) and not IS_PED_A_PLAYER(GET_PED_IN_VEHICLE_SEAT(vehicle, -2)) then
            chat.send_message(players.get_name(pid) .. " is horny and about to have sex with a prostitute. Lets make fun of this virgin! HAHA, loser!", false, true, true)
            repeat
                util.yield()
            until memory.read_int(memory.script_global(2657589 + 1 + (pid * 466) + 431)) == 0
        end
    end
end)

menu.toggle_loop(missions, "Skip Dax Work Cooldown", {}, "", function() -- thx icedoomfist for the stat name <3
    STAT_SET_INT(util.joaat("MP"..util.get_char_slot().."_XM22JUGGALOWORKCDTIMER"), -1, true)
end)

menu.action(missions, "Kill All Peds", {}, "", function()
    local counter = 0
    for entities.get_all_peds_as_handles() as ped do
        if GET_BLIP_COLOUR(GET_BLIP_FROM_ENTITY(ped)) == 1 or GET_IS_TASK_ACTIVE(ped, 352) then -- shitty way to go about it but hey, it works (most of the time).
            SET_ENTITY_HEALTH(ped, 0)
            counter += 1
            util.yield()
        end
    end
    if counter == 0 then
        util.toast("No Peds Found. :/")
    else
        util.toast("Killed ".. tostring(counter) .." Peds.")
    end
end)

menu.action(missions, "Teleport Pickups To Me", {}, "", function()
    local counter = 0
    local pos = players.get_position(players.user())
    for entities.get_all_pickups_as_handles() as pickup do
        SET_ENTITY_COORDS(pickup, pos, false, false, false, false)
        counter += 1
        util.yield()
    end
    if counter == 0 then
        util.toast("No Pickups Found. :/")
    else
        util.toast("Teleported ".. tostring(counter) .." Pickups.")
    end
end)

menu.toggle_loop(weapons, "Unfair Triggerbot", {"triggerbotall"}, "", function()
    local wpn = GET_SELECTED_PED_WEAPON(players.user_ped())
    local dmg = ROUND(GET_WEAPON_DAMAGE(wpn, 0))
    local delay = GET_WEAPON_TIME_BETWEEN_SHOTS(wpn)
    local wpnEnt = GET_CURRENT_PED_WEAPON_ENTITY_INDEX(PLAYER_PED_ID(), false)
    local wpnCoords = GET_ENTITY_BONE_POSTION(wpnEnt, GET_ENTITY_BONE_INDEX_BY_NAME(wpnEnt, "gun_muzzle"))
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if GET_ENTITY_ALPHA(ped) < 255 then return end
        boneIndex = bones[math.random(#bones)]
        local pos = GET_PED_BONE_COORDS(ped, boneIndex, 0.0, 0.0, 0.0)
        if IS_PLAYER_FREE_AIMING_AT_ENTITY(players.user(), ped) and not IS_PED_RELOADING(players.user_ped()) then
            SHOOT_SINGLE_BULLET_BETWEEN_COORDS(wpnCoords, pos, dmg, true, wpn, players.user_ped(), true, false)
            SET_CONTROL_VALUE_NEXT_FRAME(0, 24, 1.0) -- shooting manually after so it has the effect of you shooting to seem more legit despite there being nothing legit about this
            util.yield(delay * 1000)
        end
    end
end)

menu.toggle_loop(weapons, "Disable Block Blaming While Shooting", {}, "Still keep the benefits of block blaming but also be able to deal damage to other players.", function()
    if IS_PLAYER_FREE_AIMING(players.user()) then
        block_blaming.value = false
    else
        block_blaming.value = true
    end
end)

local modifier = 1.00
menu.slider_float(weapons, "Melee Damage Modifier", {"meleedamage"}, "", 100, 1000, 100, 10, function(value)
    modifier = value / 100
    SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(players.user(), modifier)
end)

menu.toggle_loop(weapons, "Max Homing Lockon Range", {}, "Sets your players lockon range with homing missles and auto aim to the max.", function()
    SET_PLAYER_LOCKON_RANGE_OVERRIDE(players.user(), 99999999.0)
end)

menu.toggle_loop(weapons, "Long Range Weapons", {}, "Extends weapon range to 250m.", function()
    SET_PED_RESET_FLAG(players.user_ped(),  95, true)
end)

local weapon_thing = menu.list(weapons, "Change Bullet Projectile", {}, "Change the bullet your gun shoots.")
for id, data in weapon_stuff do
    local name = data[1]
    local weapon_name = data[2]
    local toggled = false
    menu.toggle(weapon_thing, name, {}, "", function(toggle)
        toggled = toggle
        while toggled do
            local weapon = LoadWeaponAsset(weapon_name)
            local wpn = GET_SELECTED_PED_WEAPON(players.user_ped())
            local delay = GET_WEAPON_TIME_BETWEEN_SHOTS(wpn)
            local inst = v3.new()
            if IS_DISABLED_CONTROL_PRESSED(0, 24) then
                if not GET_PED_LAST_WEAPON_IMPACT_COORD(PLAYER_PED_ID(), memory.addrof(inst)) then
                    v3.set(inst,GET_FINAL_RENDERED_CAM_ROT(2))
                    local tmp = v3.toDir(inst)
                    v3.set(inst, v3.get(tmp))
                    v3.mul(inst, 1000)
                    v3.set(tmp, GET_FINAL_RENDERED_CAM_COORD())
                    v3.add(inst, tmp)
                end
                local x, y, z = v3.get(inst)
                local wpEnt = GET_CURRENT_PED_WEAPON_ENTITY_INDEX(PLAYER_PED_ID(), false)
                local wpCoords = GET_ENTITY_BONE_POSTION(wpEnt, GET_ENTITY_BONE_INDEX_BY_NAME(wpEnt, "gun_muzzle"))
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS(wpCoords, x, y, z, 1, true, weapon, PLAYER_PED_ID(), true, false, 1000.0)
                util.yield(delay * 1000)
            end
            util.yield()
        end
        local pos = players.get_position(players.user())
        CLEAR_AREA_OF_PROJECTILES(pos, 999999.0, 0)
    end)
end
menu.toggle_loop(weapons, "Fast Hands", {"fasthands"}, "Swaps your weapons faster.", function()
    if GET_IS_TASK_ACTIVE(players.user_ped(), 56) then
        FORCE_PED_AI_AND_ANIMATION_UPDATE(players.user_ped())
    end
end)

menu.toggle_loop(weapons, "Lock On To Players", {}, "Allows you to lock on to players with the homing launcher.", function()
    for players.list_except() as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        ADD_PLAYER_TARGETABLE_ENTITY(players.user(), ped)
        SET_ENTITY_IS_TARGET_PRIORITY(ped, false, 400.0)    
    end
end, function()
    for players.list_except() as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        REMOVE_PLAYER_TARGETABLE_ENTITY(players.user(), ped)
    end
end)

if menu.get_edition() > 1 then
    menu.toggle_loop(weapons, "ESP While Aiming", {"aimesp"}, "", function()
        if IS_PLAYER_FREE_AIMING(players.user()) then
            menu.trigger_command(menu.ref_by_path("World>Inhabitants>Player ESP>Bone ESP>Low Latency Rendering"))
        else
            menu.trigger_command(menu.ref_by_path("World>Inhabitants>Player ESP>Bone ESP>Disabled"))
        end
    end, function()
        menu.trigger_command(menu.ref_by_path("World>Inhabitants>Player ESP>Bone ESP>Disabled"))
    end)
end

local veh_jump = menu.list(vehicles, "Vehicle Jump")
local force = 25.00
menu.slider_float(veh_jump, "Power", {"jumpiness"}, "", 0, 10000, 2500, 100, function(value)
    force = value / 100
end)
menu.toggle_loop(veh_jump, "Enable", {"vehiclejump"}, "Press spacebar to jump.", function()
    local veh = entities.get_user_vehicle_as_handle()
    if veh != 0 and DOES_ENTITY_EXIST(veh) and IS_CONTROL_JUST_RELEASED(0, 102) then
        APPLY_FORCE_TO_ENTITY(veh, 1, 0.0, force/1.5, force, 0.0, 0.0, 0.0, 0, 1, 1, 1, 0, 1)
        repeat
            util.yield()
        until not IS_ENTITY_IN_AIR(veh)
    end
end)

local deformation = 1.00
menu.slider_float(vehicles, "Deformation", {"deformation"}, "", 0, 10000, 100, 100, function(value)
    deformation = value / 100
    menu.trigger_commands("vhdeformationmult " .. deformation)
end)

local seat_id = -1
local moved_seat = menu.click_slider(vehicles, "Move To Seat", {}, "", 1, 1, 1, 1, function(seat_id)
    TASK_WARP_PED_INTO_VEHICLE(players.user_ped(), entities.get_user_vehicle_as_handle(), seat_id - 2)
end)

menu.on_tick_in_viewport(moved_seat, function()
    if not IS_PED_IN_ANY_VEHICLE(players.user_ped(), false) then
        moved_seat.max_value = 0
    return end
    
    moved_seat.max_value = GET_VEHICLE_MODEL_NUMBER_OF_SEATS(GET_ENTITY_MODEL(entities.get_user_vehicle_as_handle()))
end)

menu.toggle_loop(vehicles, "Fast Hotwire", {""}, "", function()
    if not GET_IS_VEHICLE_ENGINE_RUNNING(entities.get_user_vehicle_as_handle()) and GET_IS_TASK_ACTIVE(players.user_ped(), 150) then
        FORCE_PED_AI_AND_ANIMATION_UPDATE(players.user_ped())
    end
end)

menu.toggle_loop(vehicles, "Fast Enter/Exit", {"fastvehicleenter"}, "Enter vehicles faster.", function()
    if (GET_IS_TASK_ACTIVE(players.user_ped(), 160) or GET_IS_TASK_ACTIVE(players.user_ped(), 167) or GET_IS_TASK_ACTIVE(players.user_ped(), 165)) and not GET_IS_TASK_ACTIVE(players.user_ped(), 195) then
        FORCE_PED_AI_AND_ANIMATION_UPDATE(players.user_ped())
    end
end)

menu.toggle_loop(vehicles, "Disable Godmode On Exit", {""}, "", function()
    if not GET_ENTITY_CAN_BE_DAMAGED(entities.get_user_vehicle_as_handle()) then
        if not IS_PED_IN_ANY_VEHICLE(players.user_ped(), false) then
            SET_ENTITY_CAN_BE_DAMAGED(GET_VEHICLE_PED_IS_IN(players.user_ped(), true), true)
        end
    end
end)

menu.toggle_loop(vehicles, "Bypass Anti-Lockon", {}, "", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local veh = GET_VEHICLE_PED_IS_USING(ped)
        if IS_PED_IN_ANY_VEHICLE(ped, false) then
            SET_VEHICLE_ALLOW_HOMING_MISSLE_LOCKON_SYNCED(veh, true)
        end
    end
end)

menu.toggle_loop(vehicles, "Vehicle Rocket Aimbot", {"vehicleaimbotall"}, "allows you to aimbot players using the weapons on your ", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local ped_dist = v3.distance(players.get_position(players.user()), players.get_position(pid))
        if not IS_PED_DEAD_OR_DYING(ped) and IS_CONTROL_PRESSED(0, 70) and ped_dist < 300.0 then
            SET_VEHICLE_SHOOT_AT_TARGET(players.user_ped(), ped, players.get_position(pid))
        end
    end
end)

menu.toggle_loop(vehicles, "Stick To Ground", {"sticktoground"}, "", function()
    local vehicle = GET_VEHICLE_PED_IS_USING(players.user_ped())
    local velocity = GET_ENTITY_VELOCITY(vehicle)
    local height = GET_ENTITY_HEIGHT_ABOVE_GROUND(vehicle)
    local controls = {32, 33, 34, 35}
    if height < 5.0 then
        if IS_ENTITY_IN_AIR(vehicle) then
            SET_VEHICLE_ON_GROUND_PROPERLY(vehicle, 0.0)
        end
    else
        for controls as key do
            if vehicle != 0 and IS_CONTROL_PRESSED(0, key) then
                while not IS_CONTROL_RELEASED(0, key) and IS_ENTITY_IN_AIR(vehicle) do
                    APPLY_FORCE_TO_ENTITY(vehicle, 2, 0.0, 0.0, -500 - velocity.z, 0, 0, 0, 0, true, false, true, false, true) -- setting vehilce on ground while its in air causes problems so we'll just do this
                    util.yield()
                end
            end
        end
    end
end)

menu.toggle_loop(vehicles, "Spinbot", {"spinbot"}, "", function()
    local vehicle = GET_VEHICLE_PED_IS_USING(players.user_ped())
    local velocity = GET_ENTITY_VELOCITY(vehicle)
    local height = GET_ENTITY_HEIGHT_ABOVE_GROUND(vehicle)
    if height < 5.0 and height > 0.1 then
        SET_VEHICLE_ON_GROUND_PROPERLY(vehicle)
    end
    if vehicle != 0 and not IS_PED_DEAD_OR_DYING(players.user_ped()) and NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) then
        APPLY_FORCE_TO_ENTITY(vehicle, 5, 0.0, 0.0, 150.0, 0, 0, 0, 0, true, false, true, false, true)
    end
end)

menu.toggle_loop(funfeatures, "Naruto Run", {"naruto"}, "", function()
    local dict = "swimming@scuba"
    local name = "dive_glide"
    RequestAnimation(dict)
    if not IS_ENTITY_PLAYING_ANIM(players.user_ped(), dict, name, 3) and not GET_IS_TASK_ACTIVE(players.user_ped(), 56) then
        TASK_PLAY_ANIM(players.user_ped(), dict, name, 5.0, 2.5, -1, 1|16|32, 1.0, false, false, false)
    elseif IS_ENTITY_PLAYING_ANIM(players.user_ped(), dict, name, 3) and (IS_PED_WALKING(players.user_ped()) or IS_PED_STILL(players.user_ped()) or IS_PED_JUMPING(players.user_ped()))
    or GET_IS_TASK_ACTIVE(players.user_ped(), 56) or IS_PLAYER_FREE_AIMING(players.user()) or IS_PED_RELOADING(players.user_ped()) then
        STOP_ANIM_TASK(players.user_ped(), dict, name, -69.0)
    end
end, function()
    CLEAR_PED_TASKS(players.user_ped())
end)

menu.action(funfeatures, "Broomstick Mk2", {""}, "Note: You will be invisible for other players.", function()
    local reveal_invis = menu.ref_by_path("Online>Reveal Invisible Players")
    if reveal_invis.value == true then
        util.toast("Please disable reveal invisible players.")
    return end
    local pos = players.get_position(players.user())
    local broomstick = util.joaat("prop_tool_broom")
    local oppressor = util.joaat("oppressor2")
    RequestModel(broomstick)
    RequestModel(oppressor)
    obj = entities.create_object(broomstick, pos)
    veh = entities.create_vehicle(oppressor, pos, 0)
    SET_ENTITY_VISIBLE(veh, false, false)
    SET_PED_INTO_VEHICLE(players.user_ped(), veh, -1)
    ATTACH_ENTITY_TO_ENTITY(obj, veh, 0, 0, 0, 0.3, -80.0, 0, 0, true, false, false, false, 0, true) -- thanks to chaos mod for doing the annoying rotation work for me :P
end)

local headlamp = menu.list(funfeatures, "Headlamp", {}, "Does not network with other players.")
local distance = 25.0
menu.slider_float(headlamp, "Distance", {"distance"}, "Distance that it will light up.", 100, 10000, 1500, 100, function(value)
    distance = value / 100
end)

local brightness = 10.0
menu.slider_float(headlamp, "Brightness", {"brightness"}, "Brightness of the light.", 100, 10000, 1000, 100, function(value)
    brightness = value / 100
end)

local light_radius = 15.0
menu.slider_float(headlamp, "Radius", {"radius"}, "Higher values will broaden the beam.", 100, 5000, 2000, 100, function(value)
    light_radius = value / 100
end)

local color = {r = 1, g = 235/255, b = 190/255, a = 0}
menu.colour(headlamp, "Colour", {"colour"}, "", color, true, function(value)
    color = value 
end)

menu.toggle_loop(headlamp, "Headlamp", {"headlamp"}, "", function()
    local head_pos = GET_PED_BONE_COORDS(players.user_ped(), 31086, 0.0, 0.0, 0.0)
    local cam_rot = players.get_cam_rot(players.user())
    DRAW_SPOT_LIGHT(head_pos, cam_rot:toDir(), math.floor(color.r * 255), math.floor(color.g * 255), math.floor(color.b * 255), distance * 1.5, brightness, 0.0, light_radius, distance)
end)

menu.toggle(funfeatures, "Power Outage", {"poweroutage"}, "", function(toggled)
    SET_ARTIFICIAL_LIGHTS_STATE(toggled)
end)

menu.toggle(funfeatures, "Blackout", {"blackout"}, "", function(toggled)
    menu.trigger_commands("time 1")
    SET_ARTIFICIAL_LIGHTS_STATE(toggled)
    if toggled then
        SET_TIMECYCLE_MODIFIER("dlc_island_vault")
    else
        SET_TIMECYCLE_MODIFIER("DEFAULT")
    end
end)

local obj
menu.toggle(funfeatures, "Forcefield", {}, "Attaches a UFO to your ped destroying anything in your path.", function(toggled)
    local mdl = util.joaat("p_spinning_anus_s")
    local pos = players.get_position(players.user())
    RequestModel(mdl)
    if toggled then
        obj = entities.create_object(mdl, pos)
        SET_ENTITY_VISIBLE(obj, false)
        ATTACH_ENTITY_TO_ENTITY(obj, players.user_ped(), 0, 0, 0, 0, 0, 0, 0, false, false, true, false, 0, false, 0)
    else
        if obj != nil then 
            entities.delete(obj)
        end
    end
end)

local jesus_main = menu.list(funfeatures, "Jesus Take The Wheel", {}, "Jesus take the wheeeeeeel!")
local style = 786603
menu.list_action(jesus_main, "Driving Style", {}, "Click to select a style", style_names, function(index, value)
    switch value do
        case "Normal": 
            style = 786603
            break
        case "Semi-Rushed": 
            style = 1074528293
            break
        case "Reverse": 
            style = 1076
            break
        case "Ignore Lights": 
            style = 2883621
            break
        case "Avoid Traffic": 
            style = 786468
            break
        case "Avoid Traffic Extremely": 
            style = 6
            break     
        case "Take Shortest Path":
            style = 262144
            break
        case "Sometimes Overtake Traffic": 
            style = 5
        break  
    end      
end)

local speed = 20.00
menu.slider_float(jesus_main, "Driving Speed", {""}, "", 0, 10000, 2000, 100, function(value)
    speed = value / 100
end)

local toggled = false
local jesus_toggle
jesus_toggle = menu.toggle(jesus_main, "Enable", {}, "", function(toggle)
    toggled = toggle
    local pos = players.get_position(players.user())
    local vehicle = entities.get_user_vehicle_as_handle()
    jesus = util.joaat("u_m_m_jesus_01")
    RequestModel(jesus)

    if toggled then
        if not IS_PED_IN_ANY_VEHICLE(players.user_ped(), false) then 
			util.toast(lang.get_localised(-474174214))
            menu.set_value(jesus_toggle, false)
        util.stop_thread() end
        
        jesus_ped = entities.create_ped(26, jesus, pos, 0)
        SET_ENTITY_INVINCIBLE(jesus_ped, true)
        SET_PED_INTO_VEHICLE(players.user_ped(), vehicle, -2)
        SET_PED_INTO_VEHICLE(jesus_ped, vehicle, -1)
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(jesus_ped, true)
        SET_PED_KEEP_TASK(jesus_ped, true)

        if IS_WAYPOINT_ACTIVE() then
            local waypoint = GET_BLIP_COORDS(GET_FIRST_BLIP_INFO_ID(8))
            TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(jesus_ped, vehicle, waypoint, speed, style, 0.0)
        else
            TASK_VEHICLE_DRIVE_WANDER(jesus_ped, vehicle, 20.0, 786603)
            util.toast("Waypoint not found. Jesus will drive you around. :)")
        end
        util.yield()
    else
        if jesus_ped != nil then 
            entities.delete(jesus_ped)
            SET_PED_INTO_VEHICLE(players.user_ped(), vehicle, -1)
        end
    end
    
    while toggled do
        local height = GET_ENTITY_HEIGHT_ABOVE_GROUND(vehicle)
        local upright_value = GET_ENTITY_UPRIGHT_VALUE(vehicle)
        if height < 5.0 and upright_value < 0.0 then
            SET_VEHICLE_ON_GROUND_PROPERLY(vehicle)
        end
        util.yield()
    end
end)

menu.toggle(funfeatures, "Tesla Autopilot", {}, "Elon Musk.", function(toggled)
    local pos = players.get_position(players.user())
    local tesla_ai = util.joaat("u_m_y_baygor")
    local tesla = util.joaat("raiden")
    RequestModel(tesla_ai)
    RequestModel(tesla)
    if toggled then     
        if IS_PED_IN_ANY_VEHICLE(players.user_ped(), false) then
            menu.trigger_commands("deletevehicle")
        end

        tesla_ai_ped = entities.create_ped(26, tesla_ai, pos, 0)
        tesla_vehicle = entities.create_vehicle(tesla, pos, 0)

        SET_ENTITY_INVINCIBLE(tesla_ai_ped, true) 
        SET_ENTITY_VISIBLE(tesla_ai_ped, false)
        SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(tesla_ai_ped, true)
        SET_PED_INTO_VEHICLE(players.user_ped(), tesla_vehicle, -2)
        SET_PED_INTO_VEHICLE(tesla_ai_ped, tesla_vehicle, -1)
        SET_PED_CONFIG_FLAG(tesla_ai_ped, 26, true)
        SET_PED_KEEP_TASK(tesla_ai_ped, true)

        SET_VEHICLE_COLOURS(tesla_vehicle, 111, 111)
        SET_VEHICLE_MOD(tesla_vehicle, 23, 8, false)
        SET_VEHICLE_MOD(tesla_vehicle, 15, 1, false)
        SET_VEHICLE_EXTRA_COLOURS(tesla_vehicle, 111, 147)
        menu.trigger_commands("performance")

        if IS_WAYPOINT_ACTIVE() then
            local waypoint = GET_BLIP_COORDS(GET_FIRST_BLIP_INFO_ID(8))
            TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(tesla_ai_ped, tesla_vehicle, waypoint, 20.0, 786603, 0)
        else
            TASK_VEHICLE_DRIVE_WANDER(tesla_ai_ped, tesla_vehicle, 20.0, 786603)
        end
        util.yield()
    else
        if tesla_ai_ped != nil then 
            entities.delete(tesla_ai_ped)
        end
        if tesla_vehicle != nil then 
            entities.delete(tesla_vehicle)
        end
    end
end)

for index, data in interiors do
    local location_name = data[1]
    local location_coords = data[2]
    menu.action(teleport, location_name, {}, "", function()
        menu.trigger_commands("doors on")
        menu.trigger_commands("nodeathbarriers on")
        SET_ENTITY_COORDS_NO_OFFSET(players.user_ped(), location_coords.x, location_coords.y, location_coords.z, false, false, false)
    end)
end

local finger_thing = menu.list(funfeatures, "Finger Gun", {}, "Shoot bullets from your finger. (Note: will not do damage to players)")
for id, data in weapon_stuff do
    local name = data[1]
    local weapon_name = data[2]
    local projectile = LoadWeaponAsset(weapon_name)
    local toggled = false
    menu.toggle(finger_thing, name, {}, "", function(state)
        toggled = state
        while toggled do
            if memory.read_int(memory.script_global(4521801 + 930)) == 3 then
                memory.write_int(memory.script_global(4521801 + 935), GET_NETWORK_TIME())
                local inst = v3.new()
                v3.set(inst,GET_FINAL_RENDERED_CAM_ROT(2))
                local tmp = v3.toDir(inst)
                v3.set(inst, v3.get(tmp))
                v3.mul(inst, 1000)
                v3.set(tmp, GET_FINAL_RENDERED_CAM_COORD())
                v3.add(inst, tmp)
                local x, y, z = v3.get(inst)
                local fingerPos = GET_PED_BONE_COORDS(players.user_ped(), 4089, 1.0, 0.0, 0.0)
                SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(fingerPos, x, y, z, 1, true, projectile, 0, true, false, 500.0, players.user_ped(), 0)
            end
            util.yield(100)
        end
        local pos = players.get_position(players.user())
        CLEAR_AREA_OF_PROJECTILES(pos, 999999.0, 0)
    end)
end

local jinx_pet
jinx_toggle = menu.toggle_loop(funfeatures, "Pet Jinx", {}, "", function()
    if not jinx_pet or not DOES_ENTITY_EXIST(jinx_pet) then
        local jinx = util.joaat("a_c_cat_01")
        RequestModel(jinx)
        local pos = players.get_position(players.user())
        jinx_pet = entities.create_ped(28, jinx, pos, 0)
        entities.set_can_migrate(jinx_pet, false)
        SET_PED_COMPONENT_VARIATION(jinx_pet, 0, 0, 1, 0)
        SET_ENTITY_INVINCIBLE(jinx_pet, true)
    end
    NETWORK_REQUEST_CONTROL_OF_ENTITY(jinx_pet)
    TASK_FOLLOW_TO_OFFSET_OF_ENTITY(jinx_pet, players.user_ped(), 0, -0.3, 0, 7.0, -1, 1.5, true)
end, function()
    entities.delete(jinx_pet)
end)

menu.action(funfeatures, "Find Jinx", {}, "", function()
    local pos = players.get_position(players.user())
    if jinx_pet != nil then 
        SET_ENTITY_COORDS_NO_OFFSET(jinx_pet, pos, false, false, false)
    else
        util.toast("Jinx Wasn't Found. :(")
    end
end)

local timer = 0
menu.toggle_loop(modder_detections, "Godmode", {}, "Detects if someone is using godmode.", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        for interior_stuff as id do
            if players.is_godmode(pid) and not players.is_in_interior(pid) and not NETWORK_IS_PLAYER_FADING(pid) and IS_ENTITY_VISIBLE(ped) and GET_SPAWN_STATE(pid) == 99 and GET_INTERIOR_FROM_PLAYER(pid) == id and not IS_PLAYER_RIDING_ROLLER_COASTER(pid) then
                util.draw_debug_text(players.get_name(pid) .. " is in godmode")
                break
            end
        end
    end 
end)


menu.toggle_loop(modder_detections, "Vehicle Godmode", {}, "Detects if someone is using a vehicle that is in godmode.", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        if IS_PED_IN_ANY_VEHICLE(ped, false) then
            local driver = NETWORK_GET_PLAYER_INDEX_FROM_PED(GET_PED_IN_VEHICLE_SEAT(vehicle, -1))
            for interior_stuff as id do
                if not GET_ENTITY_CAN_BE_DAMAGED(vehicle) and not NETWORK_IS_PLAYER_FADING(pid) and IS_ENTITY_VISIBLE(ped) 
                and GET_SPAWN_STATE(pid) != 0 and GET_INTERIOR_FROM_PLAYER(pid) == id and pid == driver then
                    util.draw_debug_text(players.get_name(driver) ..  " is in vehicle godmode")
                    break
                end
            end
        end
    end 
end)

menu.toggle_loop(modder_detections, "Modded Weapon", {}, "Detects if someone is using a weapon that can not be obtained in online.", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        for i, hash in modded_weapons do
            local weapon_hash = util.joaat(hash)
            if GET_SELECTED_PED_WEAPON(ped) == weapon_hash and (IS_PED_ARMED(ped, 7) or GET_IS_TASK_ACTIVE(ped, 8) or GET_IS_TASK_ACTIVE(ped, 9)) then
                util.draw_debug_text(players.get_name(pid) .. " is using a modded weapon " .. "[Model: " .. hash .. "]")
                break
            end
        end
    end
end)

local noclip_ctr = 0
menu.toggle_loop(modder_detections, "Noclip", {}, "Detects if the player is using noclip aka levitation. (Note: Using reveal invisible players will cause false positives!)", function()
    for players.list_except(true) as pid do 
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local ped_dist = v3.distance(players.get_position(players.user()), players.get_position(pid))
        local height = GET_ENTITY_HEIGHT_ABOVE_GROUND(ped)
        local oldpos = players.get_position(pid)
        util.yield()
        local currentpos = players.get_position(pid)
        local vel = GET_ENTITY_VELOCITY(ped)
        local tasks = {2, 12, 97, 160, 421}
        for tasks as id do 
            if GET_INTERIOR_FROM_PLAYER(pid) == 0 and GET_SPAWN_STATE(pid) != 0 and not IS_PED_IN_ANY_VEHICLE(ped, false) -- too many false positives occured when players where driving. so fuck them. lol.
            and not NETWORK_IS_PLAYER_FADING(pid) and IS_ENTITY_VISIBLE(ped) and not IS_PED_CLIMBING(ped)and not GET_IS_TASK_ACTIVE(ped, id) and height > 5.0 and ped_dist <= 375.0 -- higher values were causing false positives  
            and not IS_ENTITY_IN_AIR(ped) and oldpos.x != currentpos.x and oldpos.y != currentpos.y and oldpos.z != currentpos.z 
            and vel.x == 0.0 and vel.y == 0.0 and vel.z == 0.0 then
                noclip_ctr += 1
                util.yield(1000)
                if not IsDetectionPresent(pid, "Noclip") and noclip_ctr > 3 then
                    players.add_detection(pid, "Noclip", TOAST_DEFAULT, 100)
                    noclip_ctr = 0
                    break
                end
            end
        end
    end
end)

menu.toggle_loop(modder_detections, "Super Drive", {}, "Detects if someone is using super drive or modded vehicle speed.", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        local veh_speed = (GET_ENTITY_SPEED(vehicle)* 2.236936)
        local veh_class = GET_VEHICLE_CLASS(vehicle)
        local driver = NETWORK_GET_PLAYER_INDEX_FROM_PED(GET_PED_IN_VEHICLE_SEAT(vehicle, -1))
        if veh_class != 15 and veh_class != 16 and veh_speed >= 200 and (players.get_vehicle_model(pid) != util.joaat("oppressor") and players.get_vehicle_model(pid) != util.joaat("oppressor2")) and pid == driver then
            if not IsDetectionPresent(driver, "Super Drive") then
                players.add_detection(driver, "Super Drive", TOAST_DEFAULT, 75)
                break
            end
        end
    end
end)

menu.toggle_loop(modder_detections, "Thunder Join", {}, "Detects if someone is using thunder join.", function()
    for players.list_except(true) as pid do
        if GET_SPAWN_STATE(players.user()) != 99 then return end
        local old_sh = players.get_script_host()
        util.yield(100)
        local new_sh = players.get_script_host()
        if old_sh != new_sh then
            if GET_SPAWN_STATE(pid) == 0 and players.get_script_host() == pid then
                if not IsDetectionPresent(pid, "Thunder Join") then
                    players.add_detection(pid, "Thunder Join", TOAST_DEFAULT, 100)
                    break
                end
            end
        end
    end
end)

menu.toggle_loop(modder_detections, "Orbital Cannon", {}, "Detects if someone is using a modded orbital cannon.", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if IS_PLAYER_USING_ORBITAL_CANNON(pid) and not GET_IS_TASK_ACTIVE(ped, 135) and GET_SPAWN_STATE(pid) != 0 and not IS_PLAYER_DEAD(pid) then
            if not IsDetectionPresent(pid, "Modded Orbital Cannon") then
                players.add_detection(pid, "Modded Orbital Cannon", TOAST_DEFAULT, 100)
                break
            end
        end
    end
end)

menu.toggle_loop(modder_detections, "Spawned Vehicle", {}, "Detects if someone use driving a spawned vehicle.", function() -- this isnt the same as mikes, calm down, retards. I had this before him.
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        local hash = players.get_vehicle_model(pid)
        local plate_text = GET_VEHICLE_NUMBER_PLATE_TEXT(vehicle)
        local bitset = DECOR_GET_INT(vehicle, "MPBitset")
        local plyveh = DECOR_GET_INT(vehicle, "Player_Vehicle")
        local pegasusveh = DECOR_GET_BOOL(vehicle, "CreatedByPegasus")
        for veh_things as veh do -- because getting the decor int for them didnt want to work
            if hash == util.joaat(veh) and DECOR_GET_INT(vehicle, "MPBitset") == 8 then
                return 
            end
        end
        if players.get_vehicle_model(pid) != 0 and not GET_IS_TASK_ACTIVE(ped, 160) and GET_SPAWN_STATE(players.user()) != 0 then
            local driver = NETWORK_GET_PLAYER_INDEX_FROM_PED(GET_PED_IN_VEHICLE_SEAT(vehicle, -1))
            if players.get_name(driver) != "InvalidPlayer" and not pegasusveh and pid == driver then 
                if bitset == 1024 then
                    util.draw_debug_text(players.get_name(driver) .. " Is likely a 2Take1 User")
                    break
                elseif bitset == 8 or plate_text == "46EEK572" then -- thx to mike for telling me about this plate text
                    util.draw_debug_text(players.get_name(driver) .. " is using a spawned vehicle " .. "[Model: " .. util.reverse_joaat(players.get_vehicle_model(pid)) .. "]")
                    break
                end
            end
        end
    end
end)

menu.toggle_loop(modder_detections, "Modded License Plate", {}, "", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local vehicle = GET_VEHICLE_PED_IS_USING(ped)
        local plate_text = GET_VEHICLE_NUMBER_PLATE_TEXT(vehicle)
        local bitset = DECOR_GET_INT(vehicle, "MPBitset")
        local pegasusveh = DECOR_GET_BOOL(vehicle, "CreatedByPegasus")
        local plyveh = DECOR_GET_INT(vehicle, "Player_Vehicle")
        local bitset_things = {8, 3072, 10240, 11264, 1048576, 16777216}
        for bitset_things as bitsets do
            if bitset == bitsets then
                return
            end
        end
        local driver = NETWORK_GET_PLAYER_INDEX_FROM_PED(GET_PED_IN_VEHICLE_SEAT(vehicle, -1))
        if plate_text != nil and players.get_name(driver) != "InvalidPlayer" and not LegitPlatePattern(plate_text) and plyveh == 0 and not pegasusveh and pid == driver then
            util.draw_debug_text(players.get_name(driver) .. " has a modded license plate " .. "[" .. plate_text .. "]")
        end
    end
end)

menu.toggle_loop(modder_detections, "Vehicle Hijack", {}, "", function()
    for players.list_except(true) as pid do
        for entities.get_all_peds_as_handles() as ped do
            if not IS_PED_A_PLAYER(ped) and GET_IS_TASK_ACTIVE(ped, 160) and not IS_ENTITY_VISIBLE(ped) and IS_PED_IN_ANY_VEHICLE(players.user_ped(), false) and v3.distance(GET_ENTITY_COORDS(ped), players.get_position(players.user())) < 5.0 then
                entities.delete(ped)
                if not IsDetectionPresent(pid, "Vehicle Hijack") then
                    players.add_detection(pid, "Vehicle Hijack", TOAST_DEFAULT, 100)
                    break
                end
            end
        end
    end
end)

menu.toggle_loop(normal_detections, "Teleport", {}, "Detects how far a player teleports. (Note: just because they teleported doesn't mean they're modding)", function()
    for players.list_except(true) as pid do
        local old_pos = players.get_position(pid)
        util.yield(50)
        local cur_pos = players.get_position(pid)
        local distance_between_tp = v3.distance(old_pos, cur_pos)
        for interior_stuff as id do
            if GET_INTERIOR_FROM_PLAYER(pid) == id and GET_SPAWN_STATE(pid) != 0 and players.exists(pid) then
                util.yield(100)
                if distance_between_tp > 300.0 then
                    util.toast(players.get_name(pid) .. " teleported " .. ROUND(distance_between_tp) .. " meters")
                    break
                end
            end
        end
    end
end)

menu.toggle_loop(normal_detections, "Spectate", {}, "Detects if someone is spectating you.", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local cam_dist = v3.distance(players.get_position(players.user()), players.get_cam_pos(pid))
        local ped_dist = v3.distance(players.get_position(players.user()), players.get_position(pid))
        if cam_dist < 20.0 and not IS_PED_DEAD_OR_DYING(ped) and not NETWORK_IS_PLAYER_FADING(pid) and pid != players.user() then
            util.yield(1000)
            if ped_dist > 35.0 then
                for interior_stuff as id do
                    if GET_INTERIOR_FROM_PLAYER(pid) == id then
                        util.toast(players.get_name(pid) .. " is watching you")
                        break
                    end
                end
            end
        end
    end
end)

menu.toggle_loop(normal_detections, "Orbital Cannon", {}, "Detects if someone is using an orbital cannon.", function()
    for players.list_except(true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        if IS_PLAYER_USING_ORBITAL_CANNON(pid) and GET_IS_TASK_ACTIVE(ped, 135) then
            util.draw_debug_text(players.get_name(pid) .. " is at the orbital cannon")
        end
    end
end)

menu.toggle_loop(normal_detections, "Voice Chat", {}, "Detects who is talking in game chat.", function()
    for players.list_except() as pid do
        if NETWORK_IS_PLAYER_TALKING(pid) then
            util.draw_debug_text(players.get_name(pid) .. " is talking")
        end
    end 
end)

menu.toggle_loop(protections, "Anti-Beast", {}, "Prevents you from being turned into the beast but will also stop the event for others.", function()
    if util.spoof_script("am_hunt_the_beast", TERMINATE_THIS_THREAD) then
        util.toast("Hunt the beast script detected. Terminating...")
    end
end)

local anticage = menu.list(protections, "Anti-Cage", {}, "")
local alpha = 88
menu.slider(anticage, "Transparency", {"transparency"}, "The amount of transparency that cage objects will have.", 1, #values, 2, 1, function(amount)
    alpha = values[amount]
end)

local radius = 10.00
menu.slider_float(anticage,  "Blocking Radius", {"radius"}, "The radius in which anti-cage will detect for cages.", 100, 2500, 1000, 100, function(value)
    radius = value/100
end)

local cleanup = false
menu.toggle(anticage, "Auto Cleanup", {"cleanup"}, "Automatically delete any cages that get spawned.", function(toggled)
    cleanup = toggled
end)

menu.toggle_loop(anticage, "Enable Anti-Cage", {"anticage"}, "", function()
    local user = players.user_ped()
    local veh = GET_VEHICLE_PED_IS_USING(user)
    local my_ents = {user, veh}
    for entities.get_all_objects_as_pointers() as obj_ptr do
        local net_obj = memory.read_long(obj_ptr + 0xd0)
        if net_obj == 0 or memory.read_byte(net_obj + 0x49) == players.user() then
            continue
        end
        local obj_handle = entities.pointer_to_handle(obj_ptr)
        local owner = entities.get_owner(obj_ptr)
        local id = NETWORK_GET_NETWORK_ID_FROM_ENTITY(obj_handle)
        SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE(obj_handle)
        for my_ents as data do
            for interior_stuff as id do
                if v3.distance(players.get_position(players.user()), GET_ENTITY_COORDS(obj_handle)) <= radius and GET_INTERIOR_FROM_PLAYER(players.user()) == id then
                    for doors as door do
                        if entities.get_model_hash(obj_ptr) != util.joaat(door) then
                            continue
                        end
                    end
                    if data != 0 and alpha >= 1 then
                        SET_ENTITY_NO_COLLISION_ENTITY(obj_handle, data, false)  
                        SET_ENTITY_NO_COLLISION_ENTITY(data, obj_handle, false)
                        SET_ENTITY_ALPHA(obj_handle, alpha, false)
                    end
                    if data != 0 and cleanup then
                        entities.set_can_migrate(obj_ptr, true)
                        SET_ENTITY_ALPHA(obj_handle, 0, false)
                        entities.delete(obj_handle)
                    end
                    if data != 0 and IS_ENTITY_TOUCHING_ENTITY(data, obj_handle) then
                        util.toast("Blocked possible cage from " .. players.get_name(owner))
                    end
                end
            end
        end
        RELEASE_SCRIPT_GUID_FROM_ENTITY(obj_handle)
    end
end)

local anti_mugger = menu.list(protections, "Block Muggers")
menu.toggle_loop(anti_mugger, "Myself", {}, "Prevents you from being mugged.", function() -- thx nowiry for improving my method :D
    if NETWORK_IS_SCRIPT_ACTIVE("am_gang_call", 0, true, 0) then
        local ped_netId = memory.script_local("am_gang_call", 63 + 10 + (0 * 7 + 1))
        local sender = memory.script_local("am_gang_call", 287)
        local target = memory.script_local("am_gang_call", 288)

        util.spoof_script("am_gang_call", function()
            if (memory.read_int(sender) != players.user() and memory.read_int(target) == players.user() 
            and NETWORK_DOES_NETWORK_ID_EXIST(memory.read_int(ped_netId)) 
            and NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(memory.read_int(ped_netId))) then
                local mugger = NET_TO_PED(memory.read_int(ped_netId))
                entities.delete(mugger)
                util.toast("Blocked mugger from " .. players.get_name(memory.read_int(sender)))
            end
        end)
    end
end)

menu.toggle_loop(anti_mugger, "Someone Else", {}, "Prevents others from being mugged.", function()
    if NETWORK_IS_SCRIPT_ACTIVE("am_gang_call", 0, true, 0) then
        local ped_netId = memory.script_local("am_gang_call", 63 + 10 + (0 * 7 + 1))
        local sender = memory.script_local("am_gang_call", 287)
        local target = memory.script_local("am_gang_call", 288)
        
        util.spoof_script("am_gang_call", function()
            if memory.read_int(target) != players.user() and memory.read_int(sender) != players.user()
            and NETWORK_DOES_NETWORK_ID_EXIST(memory.read_int(ped_netId)) 
            and NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(memory.read_int(ped_netId)) then
                local mugger = NET_TO_PED(memory.read_int(ped_netId))
                entities.delete(mugger)
                util.toast("Blocked mugger sent by " .. players.get_name(memory.read_int(sender)) .. " to " .. players.get_name(memory.read_int(target)))
            end
        end)
    end
end)

local kick_time = 0
local auto_kick
auto_kick = menu.toggle_loop(protections, "Auto Kick Godmoders", {"kickgod"}, "Will not work with reveal invisible players as that may lead to false kicks.", function()
    local reveal_invis = menu.ref_by_path("Online>Reveal Invisible Players")
    if reveal_invis.value == true then
        util.toast("Please disable reveal invisible players. :)")
        auto_kick.value = false
    return end
    for players.list_except(true, true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local old_pos = players.get_position(pid)
        util.yield(100)
        local cur_pos = players.get_position(pid)
        local name = players.get_name(pid)
        local height = GET_ENTITY_HEIGHT_ABOVE_GROUND(ped)
        for interior_stuff as id do
            if players.is_godmode(pid) and not NETWORK_IS_PLAYER_FADING(pid) and IS_ENTITY_VISIBLE(ped) and GET_SPAWN_STATE(pid) != 0 and GET_INTERIOR_FROM_PLAYER(pid) == id and old_pos != cur_pos and height > 0.0 then
                kick_time += 1
                util.yield(2500)
                if kick_time >= 4 and name != nil and players.exists(pid) then
                    menu.trigger_commands("kick" .. name)
                    repeat
                        util.yield()
                    until not players.exists(pid)
                    util.toast("Successfully removed " .. name .. " for godmode. :D")
                    kick_time = 0
                end
            end
        end
    end 
end, function()
    kick_time = 0
end)

menu.toggle_loop(protections, "Block Transaction Error Script", {}, "Blocks the destroy vehicle script from being used maliciously to give you a transaction error.", function()
    if util.spoof_script("am_destroy_veh", TERMINATE_THIS_THREAD) then -- this script cant be started legitmiately so wont matter how we go about stopping it
        util.toast("Destroy Vehicle script detected. Terminating ..")
    end
end)

local block_spec_syncs
block_spec_syncs = menu.toggle_loop(protections, "Block Spectator Syncs", {"blockspectatorsyncs"}, "Block all syncs with people who spectate you.", function()
    for players.list_except(false, true) as pid do
        local ped = GET_PLAYER_PED_SCRIPT_INDEX(pid)
        local cam_dist = v3.distance(players.get_position(players.user()), players.get_cam_pos(pid))
        local ped_dist = v3.distance(players.get_position(players.user()), players.get_position(pid))
        if cam_dist < 20.0 then
            util.yield(1000)
            if ped_dist > 35.0 and not IS_PED_DEAD_OR_DYING(ped) then
                local outgoingSyncs = menu.ref_by_rel_path(menu.player_root(pid), "Outgoing Syncs>Block")
                outgoingSyncs.value = true
                pos = players.get_position(players.user())
                if v3.distance(pos, players.get_cam_pos(pid)) < 20.0 then
                    repeat 
                        util.yield()
                    until v3.distance(pos, players.get_cam_pos(pid)) > 50.0 
                    outgoingSyncs.value = false
                    util.toast(players.get_name(pid) .. " has stopped watching you")
                end
            end
        end
    end
end, function()
    for players.list_except(true) as pid do
        if players.exists(pid) then
            local outgoingSyncs = menu.ref_by_rel_path(menu.player_root(pid), "Outgoing Syncs>Block")
            outgoingSyncs.value = false
        end
    end
end)

menu.list_action(protections, "Clear All...", {}, "", {"Peds", "Vehicles", "Objects", "Pickups", "Projectiles", "Sounds"}, function(index, name)
    util.toast("Clearing "..name:lower().."...")
    local counter = 0
    switch index do
        case 1:
            for entities.get_all_peds_as_handles() as ped do
                if ped != players.user_ped() and not IS_PED_A_PLAYER(ped) then
                    entities.delete(ped)
                    counter += 1
                    util.yield()
                end
            end
            break
        case 2:
            for entities.get_all_vehicles_as_handles() as vehicle do
                if vehicle != GET_VEHICLE_PED_IS_IN(players.user_ped(), false) and DECOR_GET_INT(vehicle, "Player_Vehicle") == 0 and NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) then
                    entities.delete(vehicle)
                    counter += 1
                end
                util.yield()
            end
            break
        case 3:
            for entities.get_all_objects_as_handles() as object do
                entities.delete(object)
                counter += 1
                util.yield()
            end
            break
        case 4:
            for entities.get_all_pickups_as_handles() as pickup do
                entities.delete(pickup)
                counter += 1
                util.yield()
            end
            break
        case 5:
            local coords = players.get_position(players.user())
            CLEAR_AREA_OF_PROJECTILES(coords.x, coords.y, coords.z, 1000.0, 0)
            counter = "all"
            break
        case 6:
            for i = 0, 99 do
                STOP_SOUND(i)
                util.yield()
            end
        break
    end
    util.toast("Cleared "..tostring(counter).." "..name:lower()..".")
end)

menu.action(protections, "Clear Area", {"cleanse"}, "", function()
    local cleanse_entitycount = 0
    for entities.get_all_peds_as_handles() as ped do
        if ped != players.user_ped() and not IS_PED_A_PLAYER(ped) then
            entities.delete(ped)
            cleanse_entitycount += 1
            util.yield()
        end
    end
    util.toast("Cleared " .. cleanse_entitycount .. " Peds")
    cleanse_entitycount = 0
    for entities.get_all_vehicles_as_handles() as vehicle do
        if vehicle != GET_VEHICLE_PED_IS_IN(players.user_ped(), false) and DECOR_GET_INT(vehicle, "Player_Vehicle") == 0 and NETWORK_HAS_CONTROL_OF_ENTITY(vehicle) then
            entities.delete(vehicle)
            cleanse_entitycount += 1
            util.yield()
        end
    end
    util.toast("Cleared ".. cleanse_entitycount .." Vehicles")
    cleanse_entitycount = 0
    for entities.get_all_objects_as_handles() as object do
        entities.delete(object)
        cleanse_entitycount += 1
        util.yield()
    end
    util.toast("Cleared " .. cleanse_entitycount .. " Objects")
    cleanse_entitycount = 0
    for entities.get_all_pickups_as_handles() as pickup do
        entities.delete(pickup)
        cleanse_entitycount += 1
        util.yield()
    end
    util.toast("Cleared " .. cleanse_entitycount .. " Pickups")
    local pos = players.get_position(players.user())
    CLEAR_AREA_OF_PROJECTILES(pos, 400.0, 0)
    util.toast("Cleared All Projectiles")
end)

menu.hyperlink(menu.my_root(), "Join The Discord", "https://discord.gg/hjs5S93kQv")
local credits = menu.list(misc, "Credits", {}, "")
local jinx = menu.list(credits, "Jinx", {}, "")
menu.hyperlink(jinx, "Tiktok", "https://www.tiktok.com/@bigfootjinx")
menu.hyperlink(jinx, "Twitter", "https://twitter.com/bigfootjinx")
menu.hyperlink(jinx, "Instagram", "https://www.instagram.com/bigfootjinx")
menu.hyperlink(jinx, "Youtube", "https://www.youtube.com/channel/UC-nkxad5MRDuyz7xstc-wHQ?sub_confirmation=1")
menu.action(credits, "ICYPhoenix", {}, "I would have never made this script or thought of making this script if he didn't change my role to \"OP Jinx Lua\".", function()
end)
menu.action(credits, "Sapphire", {}, "dealing with all my autism and helping a ton when I first started the lua as well as when I started learning stands api and natives. (and also for spoonfeeding me)", function()
end)
menu.action(credits, "aaronlink127", {}, "helping with math stuff and also helping with the auto updater and some other features.", function()
end)
menu.action(credits, "Ren", {}, "dealing with all my autism and yelling at me to fix my code.", function()
end)
menu.action(credits, "well in that case", {}, "for making pluto and allowing parts of my code to look nicer and run smoother.", function()
end)
menu.action(credits, "jerry123", {}, "for cleaning my code in some spots and telling me what can be improved.", function()
end)
menu.action(credits, "Scriptcat", {}, "being there since I started and telling me some useful lua tips and forcing me to start learning stands api and natives.", function()
end)
menu.action(credits, "ERR_NET_ARRAY", {}, "helping with memory editing.", function()
end)
menu.action(credits, "d6b.", {}, "gifting nitro because he is such a super gamer gigachad.", function()
end)
util.keep_running()
